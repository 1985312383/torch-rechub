# ===================================================================
# Pytest 配置文件 - Python测试框架
# ===================================================================
# 这个文件配置了torch-rechub项目的测试设置
# pytest是Python最流行的测试框架，支持单元测试、集成测试等
# 更多配置说明请参考: config/CONFIG_GUIDE.md

[tool:pytest]
# 测试目录 - pytest会在这些目录中查找测试文件
testpaths = tests

# 测试文件模式 - 匹配以test_开头的Python文件
python_files = test_*.py

# 测试类模式 - 匹配以Test开头的类
python_classes = Test*

# 测试函数模式 - 匹配以test_开头的函数
python_functions = test_*

# 附加选项 - 控制pytest的行为
addopts = 
    --strict-markers        # 严格标记模式，未定义的标记会报错
    --strict-config         # 严格配置模式，配置错误会报错
    --verbose               # 详细输出模式
    --tb=short             # 简短的回溯信息
    --cov=torch_rechub     # 代码覆盖率分析 - 分析torch_rechub包
    --cov-report=term-missing:skip-covered  # 终端报告，显示未覆盖的行
    --cov-report=html      # HTML格式的覆盖率报告
    --cov-report=xml       # XML格式的覆盖率报告 (CI/CD使用)
    --cov-branch           # 分支覆盖率分析

# 自定义标记 - 用于分类和选择测试
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
        # 标记慢速测试，可用 pytest -m "not slow" 跳过
    integration: marks tests as integration tests
        # 标记集成测试
    unit: marks tests as unit tests
        # 标记单元测试

# 过滤警告 - 忽略特定类型的警告
filterwarnings =
    ignore::UserWarning         # 忽略用户警告
    ignore::DeprecationWarning  # 忽略弃用警告

# ===================================================================
# 使用示例:
# pytest                    # 运行所有测试
# pytest -v                # 详细输出
# pytest -m "not slow"     # 跳过慢速测试
# pytest --cov-report=html # 生成HTML覆盖率报告
# pytest tests/test_basic.py # 运行特定测试文件
# =================================================================== 