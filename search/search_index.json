{"config":{"lang":["en","zh"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Torch-RecHub Documentation","text":"<p>Torch-RecHub is a PyTorch-based recommender system framework with the following features:</p> <ul> <li>Usability: Provides clean API interfaces  </li> <li>Extensibility: Modular design for easy extension</li> <li>High Performance: Supports multi-GPU training</li> <li>Rich Model Zoo: Contains various recommender system models</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":"<p>First, install Torch-RecHub:</p> <pre><code>pip install torch-rechub\n</code></pre> <p>Then use the following code to train recommender system models:</p>"},{"location":"#ranking-ctr-prediction","title":"Ranking (CTR Prediction)","text":"<pre><code>from torch_rechub.models.ranking import DeepFM\nfrom torch_rechub.trainers import CTRTrainer\nfrom torch_rechub.utils.data import DataGenerator\n\ndg = DataGenerator(x, y)\ntrain_dl, val_dl, test_dl = dg.generate_dataloader(split_ratio=[0.7, 0.1], batch_size=256)\n\nmodel = DeepFM(deep_features=deep_features, fm_features=fm_features, \n               mlp_params={\"dims\": [256, 128], \"dropout\": 0.2, \"activation\": \"relu\"})\n\nctr_trainer = CTRTrainer(model)\nctr_trainer.fit(train_dl, val_dl)\nauc = ctr_trainer.evaluate(test_dl)\n</code></pre>"},{"location":"#multi-task-learning","title":"Multi-Task Learning","text":"<pre><code>from torch_rechub.models.multi_task import SharedBottom, ESMM, MMOE, PLE, AITM\nfrom torch_rechub.trainers import MTLTrainer\n\ntask_types = [\"classification\", \"classification\"]\nmodel = MMOE(features, task_types, 8, \n            expert_params={\"dims\": [32,16]}, \n            tower_params_list=[{\"dims\": [32, 16]}, {\"dims\": [32, 16]}])\n\nmtl_trainer = MTLTrainer(model)\nmtl_trainer.fit(train_dl, val_dl)\n</code></pre>"},{"location":"#matching-models","title":"Matching Models","text":"<pre><code>from torch_rechub.models.matching import DSSM\nfrom torch_rechub.trainers import MatchTrainer\nfrom torch_rechub.utils.data import MatchDataGenerator\n\ndg = MatchDataGenerator(x, y)\ntrain_dl, test_dl, item_dl = dg.generate_dataloader(test_user, all_item, batch_size=256)\n\nmodel = DSSM(user_features, item_features, temperature=0.02,\n             user_params={\"dims\": [256, 128, 64], \"activation\": 'prelu'},\n             item_params={\"dims\": [256, 128, 64], \"activation\": 'prelu'})\n\nmatch_trainer = MatchTrainer(model)\nmatch_trainer.fit(train_dl)\n</code></pre>"},{"location":"#model-zoo","title":"Model Zoo","text":""},{"location":"contributing/","title":"Contribution Guide","text":"<p>How to contribute to Torch-RecHub project.</p>"},{"location":"examples/","title":"Examples","text":"<p>Complete example code demonstrating usage of Torch-RecHub.</p>"},{"location":"faq/","title":"Frequently Asked Questions","text":"<p>Common questions and troubleshooting guide for Torch-RecHub.</p>"},{"location":"installation/","title":"Installation Guide","text":"<p>This document provides detailed installation instructions for Torch-RecHub, including both stable and development versions.</p>"},{"location":"installation/#stable-release","title":"Stable Release","text":"<pre><code>pip install torch-rechub\n</code></pre>"},{"location":"installation/#latest-version-recommended","title":"Latest Version (Recommended)","text":"<pre><code>git clone https://github.com/datawhalechina/torch-rechub.git\ncd torch-rechub\npython setup.py install\n</code></pre>"},{"location":"api-reference/models/","title":"Models API Reference","text":"<p>Detailed documentation of model APIs and parameters in Torch-RecHub.</p>"},{"location":"api-reference/trainers/","title":"\u8bad\u7ec3\u5668 API \u53c2\u8003","text":"<p>\u8fd9\u91cc\u53ef\u4ee5\u8be6\u7ec6\u4ecb\u7ecd Torch-RecHub \u4e2d\u5404\u4e2a\u8bad\u7ec3\u5668\u7684 API \u63a5\u53e3\u548c\u53c2\u6570\u8bf4\u660e\u3002</p>"},{"location":"api-reference/utils/","title":"Utilities API Reference","text":"<p>Detailed documentation of utility classes and functions in Torch-RecHub.</p>"},{"location":"tutorials/matching/","title":"Matching Models Tutorial","text":"<p>Tutorial and example code for matching models like DSSM.</p>"},{"location":"tutorials/multi-task/","title":"Multi-Task Learning Tutorial","text":"<p>Tutorial and example code for multi-task learning models like MMOE.</p>"},{"location":"tutorials/ranking/","title":"Ranking Models Tutorial","text":"<p>Tutorial and example code for ranking models like DIN.</p>"},{"location":"zh/","title":"Torch-RecHub \u6587\u6863","text":"<p>Torch-RecHub \u662f\u4e00\u4e2a\u57fa\u4e8ePyTorch\u7684\u63a8\u8350\u7cfb\u7edf\u6846\u67b6\uff0c\u5177\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a</p> <ul> <li>\u6613\u7528\u6027\uff1a\u63d0\u4f9b\u7b80\u6d01\u7684API\u63a5\u53e3</li> <li>\u53ef\u6269\u5c55\u6027\uff1a\u6a21\u5757\u5316\u8bbe\u8ba1\uff0c\u6613\u4e8e\u6269\u5c55</li> <li>\u9ad8\u6027\u80fd\uff1a\u652f\u6301\u591aGPU\u8bad\u7ec3</li> <li>\u4e30\u5bcc\u7684\u6a21\u578b\u5e93\uff1a\u5305\u542b\u591a\u79cd\u63a8\u8350\u7cfb\u7edf\u6a21\u578b</li> </ul>"},{"location":"zh/#_1","title":"\u5feb\u901f\u5f00\u59cb","text":"<p>\u9996\u5148\uff0c\u5b89\u88c5Torch-RecHub\uff1a</p> <pre><code>pip install torch-rechub\n</code></pre> <p>\u7136\u540e\uff0c\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u8fdb\u884c\u63a8\u8350\u7cfb\u7edf\u6a21\u578b\u7684\u8bad\u7ec3\uff1a</p>"},{"location":"zh/#ctr","title":"\u7cbe\u6392\uff08CTR\u9884\u6d4b\uff09","text":"<pre><code>from torch_rechub.models.ranking import DeepFM\nfrom torch_rechub.trainers import CTRTrainer\nfrom torch_rechub.utils.data import DataGenerator\n\ndg = DataGenerator(x, y)\ntrain_dataloader, val_dataloader, test_dataloader = dg.generate_dataloader(split_ratio=[0.7, 0.1], batch_size=256)\n\nmodel = DeepFM(deep_features=deep_features, fm_features=fm_features, mlp_params={\"dims\": [256, 128], \"dropout\": 0.2, \"activation\": \"relu\"})\n\nctr_trainer = CTRTrainer(model)\nctr_trainer.fit(train_dataloader, val_dataloader)\nauc = ctr_trainer.evaluate(ctr_trainer.model, test_dataloader)\n</code></pre>"},{"location":"zh/#_2","title":"\u591a\u4efb\u52a1\u6392\u5e8f","text":"<pre><code>from torch_rechub.models.multi_task import SharedBottom, ESMM, MMOE, PLE, AITM\nfrom torch_rechub.trainers import MTLTrainer\n\ntask_types = [\"classification\", \"classification\"] \nmodel = MMOE(features, task_types, 8, expert_params={\"dims\": [32,16]}, tower_params_list=[{\"dims\": [32, 16]}, {\"dims\": [32, 16]}])\n\nmtl_trainer = MTLTrainer(model)\nmtl_trainer.fit(train_dataloader, val_dataloader)\nauc = ctr_trainer.evaluate(ctr_trainer.model, test_dataloader)\n</code></pre>"},{"location":"zh/#_3","title":"\u53ec\u56de\u6a21\u578b","text":"<pre><code>from torch_rechub.models.matching import DSSM\nfrom torch_rechub.trainers import MatchTrainer\nfrom torch_rechub.utils.data import MatchDataGenerator\n\ndg = MatchDataGenerator(x y)\ntrain_dl, test_dl, item_dl = dg.generate_dataloader(test_user, all_item, batch_size=256)\n\nmodel = DSSM(user_features, item_features, temperature=0.02,\n             user_params={\n                 \"dims\": [256, 128, 64],\n                 \"activation\": 'prelu',  \n             },\n             item_params={\n                 \"dims\": [256, 128, 64],\n                 \"activation\": 'prelu', \n             })\n\nmatch_trainer = MatchTrainer(model)\nmatch_trainer.fit(train_dl)\n</code></pre>"},{"location":"zh/#_4","title":"\u6a21\u578b\u5e93","text":""},{"location":"zh/contributing/","title":"\u8d21\u732e\u6307\u5357","text":"<p>\u5982\u4f55\u4e3a Torch-RecHub \u9879\u76ee\u505a\u8d21\u732e</p>"},{"location":"zh/examples/","title":"\u793a\u4f8b\u4ee3\u7801","text":"<p>\u8fd9\u91cc\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e9b\u4f7f\u7528 Torch-RecHub \u7684\u5b8c\u6574\u793a\u4f8b\u4ee3\u7801\u3002</p>"},{"location":"zh/faq/","title":"\u5e38\u89c1\u95ee\u9898\u89e3\u7b54","text":"<p>Torch-RecHub \u5e38\u89c1\u95ee\u9898\u53ca\u6545\u969c\u6392\u9664\u6307\u5357</p>"},{"location":"zh/installation/","title":"\u5b89\u88c5\u6307\u5357","text":"<p>\u8fd9\u91cc\u53ef\u4ee5\u8be6\u7ec6\u4ecb\u7ecd Torch-RecHub \u7684\u5b89\u88c5\u65b9\u6cd5\uff0c\u5305\u62ec\u7a33\u5b9a\u7248\u548c\u6700\u65b0\u7248\u7684\u5b89\u88c5\u6b65\u9aa4\u3002</p>"},{"location":"zh/installation/#_2","title":"\u7a33\u5b9a\u7248","text":"<pre><code>pip install torch-rechub\n</code></pre>"},{"location":"zh/installation/#_3","title":"\u6700\u65b0\u7248\uff08\u63a8\u8350\uff09","text":"<pre><code>git clone https://github.com/datawhalechina/torch-rechub.git\ncd torch-rechub\npython setup.py install\n</code></pre>"},{"location":"zh/api-reference/models/","title":"\u6a21\u578b API \u53c2\u8003","text":"<p>\u8fd9\u91cc\u53ef\u4ee5\u8be6\u7ec6\u4ecb\u7ecd Torch-RecHub \u4e2d\u5404\u4e2a\u6a21\u578b\u7684 API \u63a5\u53e3\u548c\u53c2\u6570\u8bf4\u660e\u3002</p>"},{"location":"zh/api-reference/utils/","title":"\u5de5\u5177\u7c7b API \u53c2\u8003","text":"<p>\u8fd9\u91cc\u53ef\u4ee5\u8be6\u7ec6\u4ecb\u7ecd Torch-RecHub \u4e2d\u5404\u4e2a\u5de5\u5177\u7c7b\u7684 API \u63a5\u53e3\u548c\u53c2\u6570\u8bf4\u660e\u3002</p>"},{"location":"zh/tutorials/matching/","title":"\u53ec\u56de\u6a21\u578b\u6559\u7a0b","text":"<p>\u8fd9\u91cc\u53ef\u4ee5\u4ecb\u7ecd\u5339\u914d\u6a21\u578b\u7684\u4f7f\u7528\u65b9\u6cd5\u548c\u793a\u4f8b\u4ee3\u7801\uff0c\u5982 DSSM \u7b49\u3002</p>"},{"location":"zh/tutorials/multi-task/","title":"\u591a\u4efb\u52a1\u5b66\u4e60\u6559\u7a0b","text":"<p>\u8fd9\u91cc\u53ef\u4ee5\u4ecb\u7ecd\u591a\u4efb\u52a1\u5b66\u4e60\u6a21\u578b\u7684\u4f7f\u7528\u65b9\u6cd5\u548c\u793a\u4f8b\u4ee3\u7801\uff0c\u5982 SharedBottom\u3001ESMM \u7b49\u3002</p>"},{"location":"zh/tutorials/ranking/","title":"\u6392\u5e8f\u6a21\u578b\u6559\u7a0b","text":"<p>\u8fd9\u91cc\u53ef\u4ee5\u4ecb\u7ecd\u6392\u5e8f\u6a21\u578b\u7684\u4f7f\u7528\u65b9\u6cd5\u548c\u793a\u4f8b\u4ee3\u7801\uff0c\u5982 DIN \u7b49\u3002</p>"},{"location":"","title":"Torch-RecHub Documentation","text":"<p>Torch-RecHub is a PyTorch-based recommender system framework with the following features:</p> <ul> <li>Usability: Provides clean API interfaces  </li> <li>Extensibility: Modular design for easy extension</li> <li>High Performance: Supports multi-GPU training</li> <li>Rich Model Zoo: Contains various recommender system models</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":"<p>First, install Torch-RecHub:</p> <pre><code>pip install torch-rechub\n</code></pre> <p>Then use the following code to train recommender system models:</p>"},{"location":"#ranking-ctr-prediction","title":"Ranking (CTR Prediction)","text":"<pre><code>from torch_rechub.models.ranking import DeepFM\nfrom torch_rechub.trainers import CTRTrainer\nfrom torch_rechub.utils.data import DataGenerator\n\ndg = DataGenerator(x, y)\ntrain_dl, val_dl, test_dl = dg.generate_dataloader(split_ratio=[0.7, 0.1], batch_size=256)\n\nmodel = DeepFM(deep_features=deep_features, fm_features=fm_features, \n               mlp_params={\"dims\": [256, 128], \"dropout\": 0.2, \"activation\": \"relu\"})\n\nctr_trainer = CTRTrainer(model)\nctr_trainer.fit(train_dl, val_dl)\nauc = ctr_trainer.evaluate(test_dl)\n</code></pre>"},{"location":"#multi-task-learning","title":"Multi-Task Learning","text":"<pre><code>from torch_rechub.models.multi_task import SharedBottom, ESMM, MMOE, PLE, AITM\nfrom torch_rechub.trainers import MTLTrainer\n\ntask_types = [\"classification\", \"classification\"]\nmodel = MMOE(features, task_types, 8, \n            expert_params={\"dims\": [32,16]}, \n            tower_params_list=[{\"dims\": [32, 16]}, {\"dims\": [32, 16]}])\n\nmtl_trainer = MTLTrainer(model)\nmtl_trainer.fit(train_dl, val_dl)\n</code></pre>"},{"location":"#matching-models","title":"Matching Models","text":"<pre><code>from torch_rechub.models.matching import DSSM\nfrom torch_rechub.trainers import MatchTrainer\nfrom torch_rechub.utils.data import MatchDataGenerator\n\ndg = MatchDataGenerator(x, y)\ntrain_dl, test_dl, item_dl = dg.generate_dataloader(test_user, all_item, batch_size=256)\n\nmodel = DSSM(user_features, item_features, temperature=0.02,\n             user_params={\"dims\": [256, 128, 64], \"activation\": 'prelu'},\n             item_params={\"dims\": [256, 128, 64], \"activation\": 'prelu'})\n\nmatch_trainer = MatchTrainer(model)\nmatch_trainer.fit(train_dl)\n</code></pre>"},{"location":"#model-zoo","title":"Model Zoo","text":""},{"location":"contributing/","title":"Contribution Guide","text":"<p>How to contribute to Torch-RecHub project.</p>"},{"location":"examples/","title":"Examples","text":"<p>Complete example code demonstrating usage of Torch-RecHub.</p>"},{"location":"faq/","title":"Frequently Asked Questions","text":"<p>Common questions and troubleshooting guide for Torch-RecHub.</p>"},{"location":"installation/","title":"Installation Guide","text":"<p>This document provides detailed installation instructions for Torch-RecHub, including both stable and development versions.</p>"},{"location":"installation/#stable-release","title":"Stable Release","text":"<pre><code>pip install torch-rechub\n</code></pre>"},{"location":"installation/#latest-version-recommended","title":"Latest Version (Recommended)","text":"<pre><code>git clone https://github.com/datawhalechina/torch-rechub.git\ncd torch-rechub\npython setup.py install\n</code></pre>"},{"location":"api-reference/models/","title":"Models API Reference","text":"<p>Detailed documentation of model APIs and parameters in Torch-RecHub.</p>"},{"location":"api-reference/trainers/","title":"\u8bad\u7ec3\u5668 API \u53c2\u8003","text":"<p>\u8fd9\u91cc\u53ef\u4ee5\u8be6\u7ec6\u4ecb\u7ecd Torch-RecHub \u4e2d\u5404\u4e2a\u8bad\u7ec3\u5668\u7684 API \u63a5\u53e3\u548c\u53c2\u6570\u8bf4\u660e\u3002</p>"},{"location":"api-reference/utils/","title":"Utilities API Reference","text":"<p>Detailed documentation of utility classes and functions in Torch-RecHub.</p>"},{"location":"tutorials/matching/","title":"Matching Models Tutorial","text":"<p>Tutorial and example code for matching models like DSSM.</p>"},{"location":"tutorials/multi-task/","title":"Multi-Task Learning Tutorial","text":"<p>Tutorial and example code for multi-task learning models like MMOE.</p>"},{"location":"tutorials/ranking/","title":"Ranking Models Tutorial","text":"<p>Tutorial and example code for ranking models like DIN.</p>"}]}