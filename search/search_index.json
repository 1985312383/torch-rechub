{"config":{"lang":["en","zh"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to use Torch-RecHub","text":"Torch-RecHub <p>An easy-to-use, scalable, and high-performance recommendation system framework based on PyTorch</p>            Quick Start                     View GitHub"},{"location":"contributing/","title":"Contribution Guide","text":"<p>Thank you very much for your interest in the Torch-RecHub project and for considering contributing! Your help is crucial for the development of the project. This guide will detail how to participate in contributions.</p>"},{"location":"contributing/#how-to-contribute","title":"How to Contribute","text":"<p>You can contribute in the following ways:</p> <ol> <li>Report Bugs: If you find any errors or unexpected behavior while using Torch-RecHub, please submit an Issue detailing the problem, steps to reproduce it, and your environment information.</li> <li>Suggest Enhancements: If you have ideas for improving existing features or adding new ones, please create an Issue first to discuss.</li> <li>Submit Code Changes: Fix bugs, implement new features, or improve code quality.</li> <li>Improve Documentation: Enhance or correct documentation, write tutorials, or provide example use cases.</li> </ol>"},{"location":"contributing/#finding-contribution-points","title":"Finding Contribution Points","text":"<p>You can start from the following aspects:</p> <ol> <li>Check Issues: Browse the project Issues list, look for issues marked with <code>help wanted</code>.</li> <li>Improve Existing Features: If you find areas for optimization during use, feel free to propose suggestions or submit improvements directly.</li> <li>Implement New Features: If you have new ideas, it is recommended to create an Issue for discussion first to ensure it aligns with the project direction.</li> </ol>"},{"location":"contributing/#contribution-process-code-and-documentation","title":"Contribution Process (Code and Documentation)","text":"<p>We use the standard GitHub Fork &amp; Pull Request workflow to accept code and documentation contributions. (You can also perform the following operations on the GitHub website).</p> <ol> <li> <p>Fork the Repository     Visit the Torch-RecHub GitHub repository page, click the \"Fork\" button in the top right corner to copy the project to your own GitHub account.</p> </li> <li> <p>Clone Your Fork     Clone your forked repository locally:     <pre><code>git clone https://github.com/YOUR_USERNAME/torch-rechub.git\ncd torch-rechub\n</code></pre>     Please replace <code>YOUR_USERNAME</code> with your GitHub username.</p> </li> <li> <p>Set Upstream Remote (Optional but Recommended)     Add the original project repository as an upstream remote for easy synchronization of updates:     <pre><code>git remote add upstream https://github.com/datawhalechina/torch-rechub.git\n# Sync updates from upstream main branch if needed\n# git fetch upstream\n# git checkout main\n# git merge upstream/main\n</code></pre></p> </li> <li> <p>Make Changes     Write code, modify documentation, or make other improvements directly on the <code>main</code> branch.</p> </li> <li> <p>Ensure Code Quality</p> <ul> <li>Code Style: Please adhere to the project's existing code style.</li> <li>Documentation: For user-visible changes (like new features, API changes), please update relevant documentation (README, files under <code>docs/</code>, etc.).</li> </ul> </li> <li> <p>Commit Changes     Commit your changes with clear and meaningful commit messages. We recommend following the Conventional Commits specification.     <pre><code>git add .\ngit commit -m \"feat: Add support for XXX model\"\n# Or\ngit commit -m \"fix: Correct typo in README\"\n# Or\ngit commit -m \"docs: Update contribution guide\"\n</code></pre></p> </li> <li> <p>Push Branch     Push your local <code>main</code> branch to your forked GitHub repository:     <pre><code>git push origin main\n</code></pre></p> </li> <li> <p>Create a Pull Request (PR)     Return to your forked repository page on GitHub. You should see a prompt suggesting you create a Pull Request based on the recent pushes to <code>main</code>. Click that prompt or manually navigate to the \"Pull requests\" tab and click \"New pull request\".</p> <ul> <li>Choose Branches: Ensure the Base repository is <code>datawhalechina/torch-rechub</code>'s <code>main</code> branch, and the Head repository is your fork's <code>main</code> branch.</li> <li>Fill in PR Information:<ul> <li>Title: Concisely describe the purpose of the PR, often based on the commit message.</li> <li>Description: Detail the changes you've made, the problem solved (you can link related Issues, e.g., <code>Closes #123</code>), and any points reviewers should note. If the PR includes UI changes, please attach screenshots or screen recordings.</li> </ul> </li> <li>Allow Maintainer Edits (Optional): Checking \"Allow edits by maintainers\" often helps maintainers quickly fix minor issues.</li> <li>Submit PR: Click \"Create pull request\".</li> </ul> </li> </ol>"},{"location":"contributing/#pull-request-review","title":"Pull Request Review","text":"<ul> <li>After submitting the PR, the project's CI/CD workflow will automatically run tests and checks.</li> <li>Project maintainers will review your code and documentation and may suggest modifications.</li> <li>Please respond promptly to review comments and make necessary changes. Maintainers might make minor edits directly on your branch (if you allow it), or you might need to update the code yourself and push again.</li> <li>Once the PR is approved and passes all checks, maintainers will merge it into the main branch.</li> </ul> <p>Thank you again for your contribution to Torch-RecHub!</p>"},{"location":"examples/","title":"Examples","text":"<p>Complete example code demonstrating usage of Torch-RecHub.</p>"},{"location":"faq/","title":"Frequently Asked Questions","text":"<p>Common questions and troubleshooting guide for Torch-RecHub.</p>"},{"location":"getting-started/","title":"Getting Started Tutorial","text":"<p>First, install Torch-RecHub:</p> <pre><code>pip install torch-rechub\n</code></pre> <p>Then use the following code to train recommender system models:</p>"},{"location":"getting-started/#ranking-ctr-prediction","title":"Ranking (CTR Prediction)","text":"<pre><code>from torch_rechub.models.ranking import DeepFM\nfrom torch_rechub.trainers import CTRTrainer\nfrom torch_rechub.utils.data import DataGenerator\n\ndg = DataGenerator(x, y)\ntrain_dl, val_dl, test_dl = dg.generate_dataloader(split_ratio=[0.7, 0.1], batch_size=256)\n\nmodel = DeepFM(deep_features=deep_features, fm_features=fm_features, \n               mlp_params={\"dims\": [256, 128], \"dropout\": 0.2, \"activation\": \"relu\"})\n\nctr_trainer = CTRTrainer(model)\nctr_trainer.fit(train_dl, val_dl)\nauc = ctr_trainer.evaluate(test_dl)\n</code></pre>"},{"location":"getting-started/#multi-task-learning","title":"Multi-Task Learning","text":"<pre><code>from torch_rechub.models.multi_task import SharedBottom, ESMM, MMOE, PLE, AITM\nfrom torch_rechub.trainers import MTLTrainer\n\ntask_types = [\"classification\", \"classification\"]\nmodel = MMOE(features, task_types, 8, \n            expert_params={\"dims\": [32,16]}, \n            tower_params_list=[{\"dims\": [32, 16]}, {\"dims\": [32, 16]}])\n\nmtl_trainer = MTLTrainer(model)\nmtl_trainer.fit(train_dl, val_dl)\n</code></pre>"},{"location":"getting-started/#matching-models","title":"Matching Models","text":"<pre><code>from torch_rechub.models.matching import DSSM\nfrom torch_rechub.trainers import MatchTrainer\nfrom torch_rechub.utils.data import MatchDataGenerator\n\ndg = MatchDataGenerator(x, y)\ntrain_dl, test_dl, item_dl = dg.generate_dataloader(test_user, all_item, batch_size=256)\n\nmodel = DSSM(user_features, item_features, temperature=0.02,\n             user_params={\"dims\": [256, 128, 64], \"activation\": 'prelu'},\n             item_params={\"dims\": [256, 128, 64], \"activation\": 'prelu'})\n\nmatch_trainer = MatchTrainer(model)\nmatch_trainer.fit(train_dl)\n</code></pre>"},{"location":"getting-started/#model-zoo","title":"Model Zoo","text":""},{"location":"getting-started/#model-list","title":"Model List","text":"Title Tag Development Status Developers Institution Meeting Year URL PDF DIN Rank,Sequence Completed \u8d56\u654f\u6750 Alibaba KDD 2018 https://arxiv.org/abs/1706.06978 1706.06978.pdf ESMM Rank Completed \u8d56\u654f\u6750 Alibaba SIGIR 2018 https://arxiv.org/abs/1804.07931 1804.07931.pdf Youtube-SBC Match Completed \u8d56\u654f\u6750 Google RecSys 2019 https://research.google/pubs/pub48840/ 6c8a86c981a62b0126a11896b7f6ae0dae4c3566.pdf DSSM Match Completed \u8d56\u654f\u6750 \u5fae\u8f6f CIKM 2013 https://posenhuang.github.io/papers/cikm2013_DSSM_fullversion.pdf cikm2013_DSSM_fullversion.pdf MetaBalance \u5176\u4ed6 Completed Facebook www 2022 https://arxiv.org/pdf/2203.06801v1.pdf 2203.06801v1-3.pdf Wide &amp; Deep Rank Completed \u8d56\u654f\u6750 Google DLRS 2016 https://arxiv.org/pdf/1606.07792.pdf 1606.07792.pdf DSSM-Facebook Match Completed \u8d56\u654f\u6750 Facebook KDD 2020 https://arxiv.org/abs/2006.11632 2006.11632.pdf DeepFM Rank Completed \u8d56\u654f\u6750 Huawei IJCAI 2017 https://arxiv.org/abs/1703.04247 1703.04247.pdf SasRec Match \u8fdb\u884c\u4e2d \u738b\u5b87\u5bb8 PLE Rank Completed \u8d56\u654f\u6750 Tencent RecSys 2020 https://dl.acm.org/doi/abs/10.1145/3383313.3412236?casa_token=4g_ErWbxWf8AAAAA%3APhbcdBa6b-SXHlpFtKh1Lybjtv48sYV2l1GsPeL43N5Lpih_GwarAwV5hzxOYUVZoWd8dimltm4czmI 2020 (Tencent) (Recsys) [PLE] Progressive Layered Extraction (PLE) - A Novel Multi-Task Learning (MTL) Model for Personalized Recommendations.pdf AITM Rank Completed \u8d56\u654f\u6750 Meituan KDD 2021 https://arxiv.org/abs/2105.08489 2105.08489-2.pdf Shared-Bottom Rank Completed \u8d56\u654f\u6750 CMU ML 1997 https://link.springer.com/content/pdf/10.1023/A:1007379606734.pdf Caruana1997_Article_MultitaskLearning.pdf DCN Rank Completed \u8d56\u654f\u6750 Google,\u65af\u5766\u798f AKDD 2017 https://arxiv.org/abs/1708.05123 1708.05123.pdf Youtube-DNN Match Completed \u8d56\u654f\u6750 Google RecSys 2016 https://dl.acm.org/doi/10.1145/2959100.2959190 2959100.2959190.pdf MMOE Rank Completed \u8d56\u654f\u6750 Google KDD 2018 https://dl.acm.org/doi/pdf/10.1145/3219819.3220007 3219819.3220007.pdf GRU4Rec Match,Sequence Completed \u738b\u51ef Tencent KDD 2022 SASRec Match,Sequence Completed \u738b\u5b87\u5bb8 UC ICDM 2018 https://arxiv.org/pdf/1808.09781.pdf 1808.09781-3.pdf SINE Match Completed \u5eb7\u535a Alibaba WSDM 2021 https://arxiv.org/pdf/2102.09267.pdf 2102.09267.pdf (FAT-)DeepFFM Rank Completed \u5eb7\u535a Sina arXiv 2019 https://arxiv.org/pdf/1905.06336.pdf 1905.06336.pdf STAMP Match,Sequence Completed \u5eb7\u535a \u7535\u5b50\u79d1\u5927 KDD 2018 https://dl.acm.org/doi/10.1145/3219819.3219950 3219819.3219950.pdf NARM Match,Sequence Completed \u5eb7\u535a \u4eac\u4e1c,\u5c71\u4e1c\u5927\u5b66 CIKM 2017 https://arxiv.org/pdf/1711.04725.pdf 1711.00165.pdf DCN_v2 Rank Completed \u53f6\u5fd7\u96c4 Google www 2021 https://arxiv.org/abs/2008.13535 DCN V2 Improved Deep &amp; Cross Network and Practical Lessons.pdf EDCN Rank Completed \u53f6\u5fd7\u96c4 Huawei KDD 2021 https://dlp-kdd.github.io/assets/pdf/DLP-KDD_2021_paper_12.pdf FiBiNet Rank Completed \u53f6\u5fd7\u96c4 Sina RecSys 2019 https://dl.acm.org/doi/abs/10.1145/3298689.3347043 DIEN Rank,Sequence Completed \u8303\u6d9b Alibaba AAAI 2019 https://ojs.aaai.org/index.php/AAAI/article/view/4545 4545-Article Text-7584-1-10-20190706.pdf BST Rank,Sequence Completed \u8303\u6d9b Alibaba arXiv 2019 Behavior Sequence Transformer for E-commerce Recommendation in Alibaba PDF"},{"location":"installation/","title":"Installation Guide","text":"<p>This document provides detailed installation instructions for Torch-RecHub, including both stable and development versions.</p>"},{"location":"installation/#stable-release","title":"Stable Release","text":"<pre><code>pip install torch-rechub\n</code></pre>"},{"location":"installation/#latest-version-recommended","title":"Latest Version (Recommended)","text":"<pre><code>git clone https://github.com/datawhalechina/torch-rechub.git\ncd torch-rechub\npython setup.py install\n</code></pre>"},{"location":"introduction/","title":"Project Introduction","text":""},{"location":"introduction/#project-overview","title":"Project Overview","text":"<p>Torch-RecHub is a flexible and easily extensible recommendation system framework built using PyTorch. It aims to simplify the research and application of recommendation algorithms, providing common model implementations, data processing tools, and evaluation metrics.</p>"},{"location":"introduction/#features","title":"Features","text":"<ul> <li>Modular Design: Easy to add new models, datasets, and evaluation metrics.</li> <li>Based on PyTorch: Leverage PyTorch's dynamic graph and GPU acceleration capabilities.</li> <li>Rich Model Library: Includes various classic and cutting - edge recommendation algorithms (listed below).</li> <li>Standardized Process: Provide unified data loading, training, and evaluation processes.</li> <li>Easy to Configure: Easily adjust experimental settings through configuration files or command - line parameters.</li> <li>Reproducibility: Aims to ensure the reproducibility of experimental results.</li> <li>Easy to Extend: Decouple model training from model definition, without the concept of a base model.</li> <li>Native Functions: Use PyTorch's native classes and functions as much as possible without excessive customization.</li> <li>Concise Model Code: Facilitate beginners' learning while adhering to the ideas of academic papers.</li> <li>Other Features: For example, support negative sampling, multi - task learning, etc.</li> </ul>"},{"location":"introduction/#overall-architecture","title":"Overall Architecture","text":""},{"location":"introduction/#data-layer-design","title":"Data Layer Design","text":""},{"location":"introduction/#feature-classes","title":"Feature Classes","text":"<p>Numerical Features * Such as age, salary, daily click - through rate, etc.</p> <p>Categorical Features * Such as city, education level, gender, etc. * Encode with LabelEncoder to obtain Embedding vectors.</p> <p>Sequence Features * Ordered interest sequences: such as the item list clicked in the last week. * Unordered tag features: such as movie genres (action | suspense | crime). * Encode with LabelEncoder to obtain sequence Embedding vectors. * Perform pooling to reduce dimensions. * Preserve the sequence for model operations such as attention with other features. * Share the Embedding Table with Sparse features.</p>"},{"location":"introduction/#data-classes","title":"Data Classes","text":"<ul> <li>Dataset</li> <li>Dataloader</li> </ul>"},{"location":"introduction/#tool-classes","title":"Tool Classes","text":"<ul> <li>Sequence feature generation</li> <li>Sample construction</li> <li>Negative sampling</li> <li>Vectorized retrieval</li> </ul>"},{"location":"introduction/#model-layer-design","title":"Model Layer Design","text":""},{"location":"introduction/#model-classes","title":"Model Classes","text":"<p>General Layers Shallow Feature Modeling * LR: Logistic Regression * MLP: Multi - Layer Perceptron, parameters such as dims can be set through a dictionary. * EmbeddingLayer: A general Embedding layer that handles three types of features, maintains an EmbeddingTable in dictionary format, and outputs the input embeddings required by the model.</p> <p>Deep Feature Modeling * FM, FFM, CIN * self - attention, target - attention, transformer</p> <p>Custom Layers</p>"},{"location":"api-reference/models/","title":"Models API Reference","text":"<p>Detailed documentation of model APIs and parameters in Torch-RecHub.</p>"},{"location":"api-reference/trainers/","title":"\u8bad\u7ec3\u5668 API \u53c2\u8003","text":"<p>\u8fd9\u91cc\u53ef\u4ee5\u8be6\u7ec6\u4ecb\u7ecd Torch-RecHub \u4e2d\u5404\u4e2a\u8bad\u7ec3\u5668\u7684 API \u63a5\u53e3\u548c\u53c2\u6570\u8bf4\u660e\u3002</p>"},{"location":"api-reference/utils/","title":"Utilities API Reference","text":"<p>Detailed documentation of utility classes and functions in Torch-RecHub.</p>"},{"location":"tutorials/matching/","title":"Matching Models Tutorial","text":"<p>Tutorial and example code for matching models like DSSM.</p>"},{"location":"tutorials/multi-task/","title":"Multi-Task Learning Tutorial","text":"<p>Tutorial and example code for multi-task learning models like MMOE.</p>"},{"location":"tutorials/ranking/","title":"Ranking Models Tutorial","text":"<p>Tutorial and example code for ranking models like DIN.</p>"},{"location":"zh/","title":"\u6b22\u8fce\u4f7f\u7528 Torch-RecHub","text":"Torch-RecHub <p>\u4e00\u4e2a\u57fa\u4e8e PyTorch \u7684\u6613\u7528\u3001\u53ef\u6269\u5c55\u4e14\u9ad8\u6027\u80fd\u7684\u63a8\u8350\u7cfb\u7edf\u6846\u67b6</p>            \u5feb\u901f\u5f00\u59cb                     \u67e5\u770b GitHub"},{"location":"zh/contributing/","title":"\u8d21\u732e\u6307\u5357","text":"<p>\u975e\u5e38\u611f\u8c22\u60a8\u5bf9 Torch-RecHub \u9879\u76ee\u7684\u5174\u8da3\u5e76\u8003\u8651\u4e3a\u5176\u505a\u51fa\u8d21\u732e\uff01\u60a8\u7684\u5e2e\u52a9\u5bf9\u9879\u76ee\u7684\u53d1\u5c55\u81f3\u5173\u91cd\u8981\u3002\u672c\u6307\u5357\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u5982\u4f55\u53c2\u4e0e\u8d21\u732e\u3002</p>"},{"location":"zh/contributing/#_2","title":"\u5982\u4f55\u8d21\u732e","text":"<p>\u6211\u4eec\u9f13\u52b1\u5404\u79cd\u5f62\u5f0f\u7684\u8d21\u732e\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\uff1a</p> <ul> <li>\u62a5\u544a Bug</li> <li>\u63d0\u4ea4\u529f\u80fd\u8bf7\u6c42</li> <li>\u7f16\u5199\u6216\u6539\u8fdb\u6587\u6863</li> <li>\u63d0\u4ea4\u4ee3\u7801\u4fee\u590d\u6216\u65b0\u529f\u80fd\uff08\u901a\u8fc7 Pull Request\uff09</li> </ul>"},{"location":"zh/contributing/#_3","title":"\u5bfb\u627e\u8d21\u732e\u70b9","text":"<p>\u60a8\u53ef\u4ee5\u4ece\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\u5165\u624b\uff1a</p> <ol> <li>\u67e5\u770b Issues\uff1a\u6d4f\u89c8 \u9879\u76ee Issues \u5217\u8868\uff0c\u5bfb\u627e\u6807\u8bb0\u4e3a <code>help wanted</code> \u7684\u95ee\u9898\u3002</li> <li>\u6539\u8fdb\u73b0\u6709\u529f\u80fd\uff1a\u5982\u679c\u60a8\u5728\u4f7f\u7528\u4e2d\u53d1\u73b0\u53ef\u4ee5\u4f18\u5316\u7684\u5730\u65b9\uff0c\u6b22\u8fce\u63d0\u51fa\u5efa\u8bae\u6216\u76f4\u63a5\u63d0\u4ea4\u6539\u8fdb\u3002</li> <li>\u5b9e\u73b0\u65b0\u529f\u80fd\uff1a\u5982\u679c\u60a8\u6709\u65b0\u7684\u60f3\u6cd5\uff0c\u5efa\u8bae\u5148\u521b\u5efa\u4e00\u4e2a Issue \u8fdb\u884c\u8ba8\u8bba\uff0c\u4ee5\u786e\u4fdd\u5176\u7b26\u5408\u9879\u76ee\u65b9\u5411\u3002</li> </ol>"},{"location":"zh/contributing/#_4","title":"\u8d21\u732e\u6d41\u7a0b\uff08\u4ee3\u7801\u548c\u6587\u6863\uff09","text":"<p>\u6211\u4eec\u4f7f\u7528\u6807\u51c6\u7684 GitHub Fork &amp; Pull Request \u6d41\u7a0b\u6765\u63a5\u53d7\u4ee3\u7801\u548c\u6587\u6863\u7684\u8d21\u732e\u3002(\u4e0b\u5217\u64cd\u4f5c\u60a8\u4e5f\u53ef\u4ee5\u5728Github\u7f51\u9875\u4e0a\u8fdb\u884c)</p> <ol> <li> <p>Fork \u4ed3\u5e93     \u8bbf\u95ee Torch-RecHub \u7684 GitHub \u4ed3\u5e93\u9875\u9762 \uff0c\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 \"Fork\" \u6309\u94ae\uff0c\u5c06\u9879\u76ee\u590d\u5236\u5230\u60a8\u81ea\u5df1\u7684 GitHub \u8d26\u6237\u4e0b\u3002</p> </li> <li> <p>Clone \u60a8\u7684 Fork     \u5c06\u60a8 Fork \u7684\u4ed3\u5e93\u514b\u9686\u5230\u672c\u5730\uff1a     <pre><code>git clone https://github.com/YOUR_USERNAME/torch-rechub.git\ncd torch-rechub\n</code></pre>     \u8bf7\u5c06 <code>YOUR_USERNAME</code> \u66ff\u6362\u4e3a\u60a8\u7684 GitHub \u7528\u6237\u540d\u3002</p> </li> <li> <p>\u8bbe\u7f6e\u4e0a\u6e38\u4ed3\u5e93 (Optional but Recommended)     \u6dfb\u52a0\u539f\u59cb\u9879\u76ee\u4ed3\u5e93\u4f5c\u4e3a\u4e0a\u6e38\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u65b9\u4fbf\u540c\u6b65\u66f4\u65b0\uff1a     <pre><code>git remote add upstream https://github.com/datawhalechina/torch-rechub.git\n</code></pre></p> </li> <li> <p>\u8fdb\u884c\u4fee\u6539     \u5728\u60a8\u7684\u65b0\u4ed3\u5e93\u4e0a\u8fdb\u884c\u4ee3\u7801\u7f16\u5199\u3001\u6587\u6863\u4fee\u6539\u6216\u5176\u4ed6\u6539\u8fdb\u3002</p> </li> <li> <p>\u786e\u4fdd\u4ee3\u7801\u8d28\u91cf</p> <ul> <li>\u4ee3\u7801\u98ce\u683c\uff1a\u8bf7\u9075\u5faa\u9879\u76ee\u73b0\u6709\u7684\u4ee3\u7801\u98ce\u683c\u3002</li> <li>\u6587\u6863\uff1a\u5bf9\u4e8e\u7528\u6237\u53ef\u89c1\u7684\u66f4\u6539\uff08\u5982\u65b0\u529f\u80fd\u3001API \u53d8\u52a8\uff09\uff0c\u8bf7\u66f4\u65b0\u76f8\u5173\u6587\u6863\uff08README\u3001<code>docs/</code> \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u7b49\uff09\u3002</li> </ul> </li> <li> <p>\u63d0\u4ea4\u66f4\u6539     \u4f7f\u7528\u6e05\u6670\u3001\u6709\u610f\u4e49\u7684 Commit Message \u63d0\u4ea4\u60a8\u7684\u66f4\u6539\u3002\u6211\u4eec\u63a8\u8350\u9075\u5faa Conventional Commits \u89c4\u8303\u3002     <pre><code>git add .\ngit commit -m \"feat: \u6dfb\u52a0 XXX \u6a21\u578b\u652f\u6301\"\n# \u6216\u8005\ngit commit -m \"fix: \u4fee\u590d README \u4e2d\u7684\u62fc\u5199\u9519\u8bef\"\n# \u6216\u8005\ngit commit -m \"docs: \u66f4\u65b0\u8d21\u732e\u6307\u5357\"\n</code></pre></p> </li> <li> <p>\u63a8\u9001\u5206\u652f     \u5c06\u60a8\u7684\u672c\u5730\u4ee3\u7801\u63a8\u9001\u5230\u60a8 Fork \u7684 GitHub \u4ed3\u5e93\uff1a     <pre><code>git push origin main\n</code></pre></p> </li> <li> <p>\u521b\u5efa Pull Request (PR)     \u8fd4\u56de\u60a8\u5728 GitHub \u4e0a\u7684 Fork \u4ed3\u5e93\u9875\u9762\uff0c\u60a8\u4f1a\u770b\u5230\u4e00\u4e2a\u63d0\u793a\uff0c\u5efa\u8bae\u60a8\u57fa\u4e8e\u65b0\u63a8\u9001\u7684\u5206\u652f\u521b\u5efa\u4e00\u4e2a Pull Request\u3002\u70b9\u51fb\u8be5\u63d0\u793a\u6216\u624b\u52a8\u5bfc\u822a\u5230 \"Pull requests\" \u6807\u7b7e\u9875\uff0c\u70b9\u51fb \"New pull request\"\u3002</p> <ul> <li>\u9009\u62e9\u5206\u652f\uff1a\u786e\u4fdd\u57fa\u7840\u4ed3\u5e93 (Base repository) \u662f <code>datawhale/torch-rechub</code> \u7684 <code>main</code> \u5206\u652f\uff0c\u5934\u90e8\u4ed3\u5e93 (Head repository) \u662f\u60a8 Fork \u7684\u4ed3\u5e93\u4ee5\u53ca\u60a8\u521a\u521a\u63a8\u9001\u7684\u4ee3\u7801\u3002</li> <li>\u586b\u5199 PR \u4fe1\u606f\uff1a<ul> <li>\u6807\u9898\uff1a\u7b80\u660e\u627c\u8981\u5730\u63cf\u8ff0 PR \u7684\u76ee\u7684\uff0c\u901a\u5e38\u53ef\u4ee5\u57fa\u4e8e Commit Message\u3002</li> <li>\u63cf\u8ff0\uff1a\u8be6\u7ec6\u8bf4\u660e\u60a8\u6240\u505a\u7684\u66f4\u6539\u3001\u89e3\u51b3\u7684\u95ee\u9898\uff08\u53ef\u4ee5\u94fe\u63a5\u76f8\u5173\u7684 Issue\uff0c\u4f8b\u5982 <code>Closes #123</code>\uff09\u3001\u4ee5\u53ca\u4efb\u4f55\u9700\u8981\u8bc4\u5ba1\u8005\u6ce8\u610f\u7684\u4e8b\u9879\u3002\u5982\u679c PR \u5305\u542b UI \u66f4\u6539\uff0c\u8bf7\u9644\u4e0a\u622a\u56fe\u6216\u5f55\u5c4f\u3002</li> </ul> </li> <li>\u5141\u8bb8\u7ef4\u62a4\u8005\u4fee\u6539 (\u53ef\u9009)\uff1a\u52fe\u9009 \"Allow edits by maintainers\" \u901a\u5e38\u6709\u52a9\u4e8e\u7ef4\u62a4\u8005\u5feb\u901f\u4fee\u590d\u5c0f\u95ee\u9898\u3002</li> <li>\u63d0\u4ea4 PR\uff1a\u70b9\u51fb \"Create pull request\"\u3002</li> </ul> </li> </ol>"},{"location":"zh/contributing/#pull-request","title":"Pull Request \u8bc4\u5ba1","text":"<ul> <li>\u63d0\u4ea4 PR \u540e\uff0c\u9879\u76ee\u7684 CI/CD \u6d41\u7a0b\u4f1a\u81ea\u52a8\u8fd0\u884c\u6d4b\u8bd5\u548c\u68c0\u67e5\u3002</li> <li>\u9879\u76ee\u7ef4\u62a4\u8005\u4f1a\u8bc4\u5ba1\u60a8\u7684\u4ee3\u7801\u548c\u6587\u6863\uff0c\u5e76\u53ef\u80fd\u63d0\u51fa\u4fee\u6539\u610f\u89c1\u3002</li> <li>\u8bf7\u53ca\u65f6\u56de\u5e94\u8bc4\u5ba1\u610f\u89c1\u5e76\u8fdb\u884c\u5fc5\u8981\u7684\u4fee\u6539\u3002\u7ef4\u62a4\u8005\u53ef\u80fd\u4f1a\u76f4\u63a5\u5728\u60a8\u7684\u5206\u652f\u4e0a\u8fdb\u884c\u5c0f\u7684\u4fee\u8ba2\uff08\u5982\u679c\u60a8\u5141\u8bb8\u7684\u8bdd\uff09\uff0c\u6216\u8005\u60a8\u9700\u8981\u81ea\u5df1\u66f4\u65b0\u4ee3\u7801\u5e76\u91cd\u65b0\u63a8\u9001\u3002</li> <li>\u4e00\u65e6 PR \u88ab\u6279\u51c6\u5e76\u901a\u8fc7\u6240\u6709\u68c0\u67e5\uff0c\u7ef4\u62a4\u8005\u4f1a\u5c06\u5176\u5408\u5e76\u5230\u4e3b\u5206\u652f\u4e2d\u3002</li> </ul> <p>\u518d\u6b21\u611f\u8c22\u60a8\u5bf9 Torch-RecHub \u7684\u8d21\u732e\uff01</p>"},{"location":"zh/examples/","title":"\u793a\u4f8b\u4ee3\u7801","text":"<p>\u8fd9\u91cc\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e9b\u4f7f\u7528 Torch-RecHub \u7684\u5b8c\u6574\u793a\u4f8b\u4ee3\u7801\u3002</p>"},{"location":"zh/faq/","title":"\u5e38\u89c1\u95ee\u9898\u89e3\u7b54","text":"<p>Torch-RecHub \u5e38\u89c1\u95ee\u9898\u53ca\u6545\u969c\u6392\u9664\u6307\u5357</p>"},{"location":"zh/getting-started/","title":"\u5165\u95e8\u6559\u7a0b","text":"<p>\u9996\u5148\uff0c\u5b89\u88c5Torch-RecHub\uff1a</p> <pre><code>pip install torch-rechub\n</code></pre> <p>\u7136\u540e\uff0c\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u8fdb\u884c\u63a8\u8350\u7cfb\u7edf\u6a21\u578b\u7684\u8bad\u7ec3\uff1a</p>"},{"location":"zh/getting-started/#ctr","title":"\u7cbe\u6392\uff08CTR\u9884\u6d4b\uff09","text":"<pre><code>from torch_rechub.models.ranking import DeepFM\nfrom torch_rechub.trainers import CTRTrainer\nfrom torch_rechub.utils.data import DataGenerator\n\ndg = DataGenerator(x, y)\ntrain_dataloader, val_dataloader, test_dataloader = dg.generate_dataloader(split_ratio=[0.7, 0.1], batch_size=256)\n\nmodel = DeepFM(deep_features=deep_features, fm_features=fm_features, mlp_params={\"dims\": [256, 128], \"dropout\": 0.2, \"activation\": \"relu\"})\n\nctr_trainer = CTRTrainer(model)\nctr_trainer.fit(train_dataloader, val_dataloader)\nauc = ctr_trainer.evaluate(ctr_trainer.model, test_dataloader)\n</code></pre>"},{"location":"zh/getting-started/#_1","title":"\u591a\u4efb\u52a1\u6392\u5e8f","text":"<pre><code>from torch_rechub.models.multi_task import SharedBottom, ESMM, MMOE, PLE, AITM\nfrom torch_rechub.trainers import MTLTrainer\n\ntask_types = [\"classification\", \"classification\"] \nmodel = MMOE(features, task_types, 8, expert_params={\"dims\": [32,16]}, tower_params_list=[{\"dims\": [32, 16]}, {\"dims\": [32, 16]}])\n\nmtl_trainer = MTLTrainer(model)\nmtl_trainer.fit(train_dataloader, val_dataloader)\nauc = ctr_trainer.evaluate(ctr_trainer.model, test_dataloader)\n</code></pre>"},{"location":"zh/getting-started/#_2","title":"\u53ec\u56de\u6a21\u578b","text":"<pre><code>from torch_rechub.models.matching import DSSM\nfrom torch_rechub.trainers import MatchTrainer\nfrom torch_rechub.utils.data import MatchDataGenerator\n\ndg = MatchDataGenerator(x y)\ntrain_dl, test_dl, item_dl = dg.generate_dataloader(test_user, all_item, batch_size=256)\n\nmodel = DSSM(user_features, item_features, temperature=0.02,\n             user_params={\n                 \"dims\": [256, 128, 64],\n                 \"activation\": 'prelu',  \n             },\n             item_params={\n                 \"dims\": [256, 128, 64],\n                 \"activation\": 'prelu', \n             })\n\nmatch_trainer = MatchTrainer(model)\nmatch_trainer.fit(train_dl)\n</code></pre>"},{"location":"zh/getting-started/#_3","title":"\u6a21\u578b\u5e93","text":""},{"location":"zh/getting-started/#_4","title":"\u6a21\u578b\u6e05\u5355","text":"\u6807\u9898 \u6807\u7b7e \u5f00\u53d1\u72b6\u6001 \u5f00\u53d1\u4eba\u5458 \u673a\u6784 \u4f1a\u8bae \u5e74\u4efd URL pdf DIN \u6392\u5e8f,\u5e8f\u5217\u5efa\u6a21 \u5df2\u5b8c\u6210 \u8d56\u654f\u6750 \u963f\u91cc\u5df4\u5df4 KDD 2018 https://arxiv.org/abs/1706.06978 1706.06978.pdf ESMM \u6392\u5e8f \u5df2\u5b8c\u6210 \u8d56\u654f\u6750 \u963f\u91cc\u5df4\u5df4 SIGIR 2018 https://arxiv.org/abs/1804.07931 1804.07931.pdf Youtube-SBC \u53ec\u56de \u5df2\u5b8c\u6210 \u8d56\u654f\u6750 \u8c37\u6b4c RecSys 2019 https://research.google/pubs/pub48840/ 6c8a86c981a62b0126a11896b7f6ae0dae4c3566.pdf DSSM \u53ec\u56de \u5df2\u5b8c\u6210 \u8d56\u654f\u6750 \u5fae\u8f6f CIKM 2013 https://posenhuang.github.io/papers/cikm2013_DSSM_fullversion.pdf cikm2013_DSSM_fullversion.pdf MetaBalance \u5176\u4ed6 \u5df2\u5b8c\u6210 Facebook www 2022 https://arxiv.org/pdf/2203.06801v1.pdf 2203.06801v1-3.pdf Wide &amp; Deep \u6392\u5e8f \u5df2\u5b8c\u6210 \u8d56\u654f\u6750 \u8c37\u6b4c DLRS 2016 https://arxiv.org/pdf/1606.07792.pdf 1606.07792.pdf DSSM-Facebook \u53ec\u56de \u5df2\u5b8c\u6210 \u8d56\u654f\u6750 Facebook KDD 2020 https://arxiv.org/abs/2006.11632 2006.11632.pdf DeepFM \u6392\u5e8f \u5df2\u5b8c\u6210 \u8d56\u654f\u6750 \u534e\u4e3a IJCAI 2017 https://arxiv.org/abs/1703.04247 1703.04247.pdf SasRec \u53ec\u56de \u8fdb\u884c\u4e2d \u738b\u5b87\u5bb8 PLE \u6392\u5e8f \u5df2\u5b8c\u6210 \u8d56\u654f\u6750 \u817e\u8baf RecSys 2020 https://dl.acm.org/doi/abs/10.1145/3383313.3412236?casa_token=4g_ErWbxWf8AAAAA%3APhbcdBa6b-SXHlpFtKh1Lybjtv48sYV2l1GsPeL43N5Lpih_GwarAwV5hzxOYUVZoWd8dimltm4czmI 2020 (Tencent) (Recsys) [PLE] Progressive Layered Extraction (PLE) - A Novel Multi-Task Learning (MTL) Model for Personalized Recommendations.pdf AITM \u6392\u5e8f \u5df2\u5b8c\u6210 \u8d56\u654f\u6750 \u7f8e\u56e2 KDD 2021 https://arxiv.org/abs/2105.08489 2105.08489-2.pdf Shared-Bottom \u6392\u5e8f \u5df2\u5b8c\u6210 \u8d56\u654f\u6750 CMU ML 1997 https://link.springer.com/content/pdf/10.1023/A:1007379606734.pdf Caruana1997_Article_MultitaskLearning.pdf DCN \u6392\u5e8f \u5df2\u5b8c\u6210 \u8d56\u654f\u6750 \u8c37\u6b4c,\u65af\u5766\u798f AKDD 2017 https://arxiv.org/abs/1708.05123 1708.05123.pdf Youtube-DNN \u53ec\u56de \u5df2\u5b8c\u6210 \u8d56\u654f\u6750 \u8c37\u6b4c RecSys 2016 https://dl.acm.org/doi/10.1145/2959100.2959190 2959100.2959190.pdf MMOE \u6392\u5e8f \u5df2\u5b8c\u6210 \u8d56\u654f\u6750 \u8c37\u6b4c KDD 2018 https://dl.acm.org/doi/pdf/10.1145/3219819.3220007 3219819.3220007.pdf GRU4Rec \u53ec\u56de,\u5e8f\u5217\u5efa\u6a21 \u5df2\u5b8c\u6210 \u738b\u51ef \u817e\u8baf KDD 2022 SASRec \u53ec\u56de,\u5e8f\u5217\u5efa\u6a21 \u5df2\u5b8c\u6210 \u738b\u5b87\u5bb8 UC ICDM 2018 https://arxiv.org/pdf/1808.09781.pdf 1808.09781-3.pdf SINE \u53ec\u56de \u5df2\u5b8c\u6210 \u5eb7\u535a \u963f\u91cc\u5df4\u5df4 WSDM 2021 https://arxiv.org/pdf/2102.09267.pdf 2102.09267.pdf (FAT-)DeepFFM \u6392\u5e8f \u5df2\u5b8c\u6210 \u5eb7\u535a \u65b0\u6d6a arXiv 2019 https://arxiv.org/pdf/1905.06336.pdf 1905.06336.pdf STAMP \u53ec\u56de,\u5e8f\u5217\u5efa\u6a21 \u5df2\u5b8c\u6210 \u5eb7\u535a \u7535\u5b50\u79d1\u5927 KDD 2018 https://dl.acm.org/doi/10.1145/3219819.3219950 3219819.3219950.pdf NARM \u53ec\u56de,\u5e8f\u5217\u5efa\u6a21 \u5df2\u5b8c\u6210 \u5eb7\u535a \u4eac\u4e1c,\u5c71\u4e1c\u5927\u5b66 CIKM 2017 https://arxiv.org/pdf/1711.04725.pdf 1711.00165.pdf DCN_v2 \u6392\u5e8f \u5df2\u5b8c\u6210 \u53f6\u5fd7\u96c4 \u8c37\u6b4c www 2021 https://arxiv.org/abs/2008.13535 DCN V2 Improved Deep &amp; Cross Network and Practical Lessons.pdf EDCN \u6392\u5e8f \u5df2\u5b8c\u6210 \u53f6\u5fd7\u96c4 \u534e\u4e3a KDD 2021 https://dlp-kdd.github.io/assets/pdf/DLP-KDD_2021_paper_12.pdf FiBiNet \u6392\u5e8f \u5df2\u5b8c\u6210 \u53f6\u5fd7\u96c4 \u65b0\u6d6a RecSys 2019 https://dl.acm.org/doi/abs/10.1145/3298689.3347043 DIEN \u6392\u5e8f,\u5e8f\u5217\u5efa\u6a21 \u5df2\u5b8c\u6210 \u8303\u6d9b \u963f\u91cc\u5df4\u5df4 AAAI 2019 https://ojs.aaai.org/index.php/AAAI/article/view/4545 4545-Article Text-7584-1-10-20190706.pdf BST \u6392\u5e8f,\u5e8f\u5217\u5efa\u6a21 \u5df2\u5b8c\u6210 \u8303\u6d9b \u963f\u91cc\u5df4\u5df4 arXiv 2019 Behavior Sequence Transformer for E-commerce Recommendation in Alibaba pdf <p>\u53c2\u8003\u8d44\u6599</p>"},{"location":"zh/installation/","title":"\u5b89\u88c5\u6307\u5357","text":"<p>\u8fd9\u91cc\u53ef\u4ee5\u8be6\u7ec6\u4ecb\u7ecd Torch-RecHub \u7684\u5b89\u88c5\u65b9\u6cd5\uff0c\u5305\u62ec\u7a33\u5b9a\u7248\u548c\u6700\u65b0\u7248\u7684\u5b89\u88c5\u6b65\u9aa4\u3002</p>"},{"location":"zh/installation/#_2","title":"\u7a33\u5b9a\u7248","text":"<pre><code>pip install torch-rechub\n</code></pre>"},{"location":"zh/installation/#_3","title":"\u6700\u65b0\u7248\uff08\u63a8\u8350\uff09","text":"<pre><code>git clone https://github.com/datawhalechina/torch-rechub.git\ncd torch-rechub\npython setup.py install\n</code></pre>"},{"location":"zh/introduction/","title":"\u9879\u76ee\u4ecb\u7ecd","text":""},{"location":"zh/introduction/#_2","title":"\u9879\u76ee\u6982\u8ff0","text":"<p>Torch-RecHub \u662f\u4e00\u4e2a\u4f7f\u7528 PyTorch \u6784\u5efa\u7684\u3001\u7075\u6d3b\u4e14\u6613\u4e8e\u6269\u5c55\u7684\u63a8\u8350\u7cfb\u7edf\u6846\u67b6\u3002\u5b83\u65e8\u5728\u7b80\u5316\u63a8\u8350\u7b97\u6cd5\u7684\u7814\u7a76\u548c\u5e94\u7528\uff0c\u63d0\u4f9b\u5e38\u89c1\u7684\u6a21\u578b\u5b9e\u73b0\u3001\u6570\u636e\u5904\u7406\u5de5\u5177\u548c\u8bc4\u4f30\u6307\u6807\u3002</p>"},{"location":"zh/introduction/#_3","title":"\u7279\u6027","text":"<ul> <li>\u6a21\u5757\u5316\u8bbe\u8ba1: \u6613\u4e8e\u6dfb\u52a0\u65b0\u7684\u6a21\u578b\u3001\u6570\u636e\u96c6\u548c\u8bc4\u4f30\u6307\u6807\u3002</li> <li>\u57fa\u4e8e PyTorch: \u5229\u7528 PyTorch \u7684\u52a8\u6001\u56fe\u548c GPU \u52a0\u901f\u80fd\u529b\u3002</li> <li>\u4e30\u5bcc\u7684\u6a21\u578b\u5e93: \u5305\u542b\u591a\u79cd\u7ecf\u5178\u548c\u524d\u6cbf\u7684\u63a8\u8350\u7b97\u6cd5\uff08\u8bf7\u5728\u4e0b\u65b9\u5217\u51fa\uff09\u3002</li> <li>\u6807\u51c6\u5316\u6d41\u7a0b: \u63d0\u4f9b\u7edf\u4e00\u7684\u6570\u636e\u52a0\u8f7d\u3001\u8bad\u7ec3\u548c\u8bc4\u4f30\u6d41\u7a0b\u3002</li> <li>\u6613\u4e8e\u914d\u7f6e: \u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u6216\u547d\u4ee4\u884c\u53c2\u6570\u8f7b\u677e\u8c03\u6574\u5b9e\u9a8c\u8bbe\u7f6e\u3002</li> <li>\u53ef\u590d\u73b0\u6027: \u65e8\u5728\u786e\u4fdd\u5b9e\u9a8c\u7ed3\u679c\u7684\u53ef\u590d\u73b0\u6027\u3002</li> <li>\u6613\u6269\u5c55: \u6a21\u578b\u8bad\u7ec3\u4e0e\u6a21\u578b\u5b9a\u4e49\u89e3\u8026\uff0c\u65e0basemodel\u6982\u5ff5\u3002</li> <li>\u539f\u751f\u51fd\u6570: \u5c3d\u53ef\u80fd\u4f7f\u7528pytorch\u539f\u751f\u7684\u7c7b\u4e0e\u51fd\u6570\uff0c\u4e0d\u505a\u8fc7\u591a\u5b9a\u5236\u3002</li> <li>\u6a21\u578b\u4ee3\u7801\u7cbe\u7b80: \u5728\u7b26\u5408\u8bba\u6587\u601d\u60f3\u7684\u57fa\u7840\u4e0a\u65b9\u4fbf\u65b0\u624b\u5b66\u4e60</li> <li>\u5176\u4ed6\u7279\u6027: \u4f8b\u5982\uff0c\u652f\u6301\u8d1f\u91c7\u6837\u3001\u591a\u4efb\u52a1\u5b66\u4e60\u7b49\u3002</li> </ul>"},{"location":"zh/introduction/#_4","title":"\u6574\u4f53\u67b6\u6784","text":""},{"location":"zh/introduction/#_5","title":"\u6570\u636e\u5c42\u8bbe\u8ba1","text":""},{"location":"zh/introduction/#_6","title":"\u7279\u5f81\u7c7b","text":"<p>\u6570\u503c\u578b\u7279\u5f81 * \u4f8b\u5982\u5e74\u9f84\u3001\u85aa\u8d44\u3001\u65e5\u70b9\u51fb\u91cf\u7b49</p> <p>\u7c7b\u522b\u578b\u7279\u5f81 * \u4f8b\u5982\u57ce\u5e02\u3001\u5b66\u5386\u3001\u6027\u522b\u7b49 * LabelEncoder\u7f16\u7801\uff0c\u5f97\u5230Embedding\u5411\u91cf</p> <p>\u5e8f\u5217\u7279\u5f81 * \u6709\u5e8f\u5174\u8da3\u5e8f\u5217\uff1a\u4f8b\u5982\u6700\u8fd1\u4e00\u5468\u70b9\u51fb\u8fc7\u7684item list * \u65e0\u5e8f\u6807\u7b7e\u7279\u5f81\uff1a\u4f8b\u5982\u7535\u5f71\u7c7b\u578b\uff08\u52a8\u4f5c|\u60ac\u7591|\u72af\u7f6a\uff09 * LabelEncoder\u7f16\u7801\uff0c\u5f97\u5230\u5e8f\u5217Embedding\u5411\u91cf * \u6c60\u5316\uff0c\u964d\u7ef4 * \u4fdd\u7559\u5e8f\u5217\uff0c\u4e0e\u5176\u4ed6\u7279\u5f81\u8fdb\u884cattention\u7b49\u6a21\u578b\u64cd\u4f5c * \u4e0eSparse\u7279\u5f81\u5171\u4eabEmbedding Table</p>"},{"location":"zh/introduction/#_7","title":"\u6570\u636e\u7c7b","text":"<ul> <li>Dataset</li> <li>Dataloader</li> </ul>"},{"location":"zh/introduction/#_8","title":"\u5de5\u5177\u7c7b","text":"<ul> <li>\u5e8f\u5217\u7279\u5f81\u751f\u6210</li> <li>\u6837\u672c\u6784\u9020</li> <li>\u8d1f\u91c7\u6837</li> <li>\u5411\u91cf\u5316\u53ec\u56de</li> </ul>"},{"location":"zh/introduction/#_9","title":"\u6a21\u578b\u5c42\u8bbe\u8ba1","text":""},{"location":"zh/introduction/#_10","title":"\u6a21\u578b\u7c7b","text":"<p>\u901a\u7528Layer \u6d45\u5c42\u7279\u5f81\u5efa\u6a21 * LR\uff1a\u903b\u8f91\u56de\u5f52 * MLP\uff1a\u591a\u5c42\u611f\u77e5\u673a\uff0c\u53ef\u901a\u8fc7\u5b57\u5178\u8bbe\u7f6edims\u7b49\u53c2\u6570 * EmbeddinLayer\uff1a\u901a\u7528Embedding\u5c42\uff0c\u542b\u4e09\u7c7b\u7279\u5f81\u7684\u5904\u7406\uff0c\u7ef4\u62a4\u4e00\u4e2adict\u683c\u5f0f\u7684EmbeddingTable\uff0c\u8f93\u51fa\u7ecf\u8fc7\u6a21\u578b\u6240\u9700\u8981\u7684\u8f93\u5165embedding</p> <p>\u6df1\u5c42\u7279\u5f81\u5efa\u6a21 * FM\u3001FFM\u3001CIN * self-attention\u3001target-attention\u3001transformer</p> <p>\u5b9a\u5236Layer</p>"},{"location":"zh/api-reference/models/","title":"\u6a21\u578b API \u53c2\u8003","text":"<p>\u8fd9\u91cc\u53ef\u4ee5\u8be6\u7ec6\u4ecb\u7ecd Torch-RecHub \u4e2d\u5404\u4e2a\u6a21\u578b\u7684 API \u63a5\u53e3\u548c\u53c2\u6570\u8bf4\u660e\u3002</p>"},{"location":"zh/api-reference/utils/","title":"\u5de5\u5177\u7c7b API \u53c2\u8003","text":"<p>\u8fd9\u91cc\u53ef\u4ee5\u8be6\u7ec6\u4ecb\u7ecd Torch-RecHub \u4e2d\u5404\u4e2a\u5de5\u5177\u7c7b\u7684 API \u63a5\u53e3\u548c\u53c2\u6570\u8bf4\u660e\u3002</p>"},{"location":"zh/blog/match/","title":"\u53ec\u56de\u535a\u5ba2","text":""},{"location":"zh/blog/match/#loss-3","title":"\u4e00\u3001\u4e71\u4e03\u516b\u7cdf\u7684Loss\uff1f\u2014\u2014 3\u79cd\u8bad\u7ec3\u65b9\u5f0f","text":"<p>\u53ec\u56de\u4e2d\uff0c\u4e00\u822c\u7684\u8bad\u7ec3\u65b9\u5f0f\u5206\u4e3a\u4e09\u79cd\uff1apoint-wise\u3001pair-wise\u3001list-wise\u3002\u5728RecHub\u4e2d\uff0c\u7528\u53c2\u6570mode\u6765\u6307\u5b9a\u8bad\u7ec3\u65b9\u5f0f\uff0c\u6bcf\u4e00\u79cd\u4e0d\u540c\u7684\u8bad\u7ec3\u65b9\u5f0f\u4e5f\u5bf9\u5e94\u4e0d\u540c\u7684Loss\u3002</p>"},{"location":"zh/blog/match/#11-point-wise-mode-0","title":"1.1 Point wise (mode = 0)","text":"<p>\ud83e\udd70\u6838\u5fc3\u601d\u60f3\uff1a\u5c06\u53ec\u56de\u89c6\u4e3a\u4e8c\u5206\u7c7b\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u53ec\u56de\u6a21\u578b\uff0c\u8f93\u5165\u4e8c\u5143\u7ec4\\\uff0c\u8f93\u51fa\\(P(User, Item)\\)\uff0c\u8868\u793aUser\u5bf9Item\u7684\u611f\u5174\u8da3\u7a0b\u5ea6\u3002 <p>\u8bad\u7ec3\u76ee\u6807\u4e3a\uff1a\u82e5\u7269\u54c1\u4e3a\u6b63\u6837\u672c\uff0c\u8f93\u51fa\u5e94\u5c3d\u53ef\u80fd\u63a5\u8fd11\uff0c\u8d1f\u6837\u672c\u5219\u8f93\u51fa\u5c3d\u53ef\u80fd\u63a5\u8fd10\u3002</p> <p>\u91c7\u7528\u7684Loss\u6700\u5e38\u89c1\u7684\u5c31\u662fBCELoss\uff08Binary Cross Entropy Loss\uff09\u3002</p>"},{"location":"zh/blog/match/#12-pair-wise-mode-1","title":"1.2 Pair wise (mode = 1)","text":"<p>\ud83d\ude1d\u6838\u5fc3\u601d\u60f3\uff1a\u7528\u6237\u5bf9\u6b63\u6837\u672c\u611f\u5174\u8da3\u7684\u7a0b\u5ea6\u5e94\u8be5\u5927\u4e8e\u8d1f\u6837\u672c\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u53ec\u56de\u6a21\u578b\uff0c\u8f93\u5165\u4e09\u5143\u7ec4\\&lt;User, ItemPositive, ItemNegative&gt;\uff0c\u8f93\u51fa\u5174\u8da3\u5f97\u5206\\(P(User, ItemPositive)\\)\uff0c\\(P(User, ItemNegative)\\)\uff0c\u8868\u793a\u7528\u6237\u5bf9\u6b63\u6837\u672c\u7269\u54c1\u548c\u8d1f\u6837\u672c\u7269\u54c1\u7684\u5174\u8da3\u5f97\u5206\u3002</p> <p>\u8bad\u7ec3\u76ee\u6807\u4e3a\uff1a\u6b63\u6837\u672c\u7684\u5174\u8da3\u5f97\u5206\u5e94\u5c3d\u53ef\u80fd\u5927\u4e8e\u8d1f\u6837\u672c\u7684\u5174\u8da3\u5f97\u5206\u3002</p> <p>\u6846\u67b6\u4e2d\u91c7\u7528\u7684Loss\u4e3aBPRLoss\uff08Bayes Personalized Ranking Loss\uff09\u3002Loss\u7684\u516c\u5f0f\u8fd9\u91cc\u653e\u4e00\u4e2a\u516c\u5f0f\uff0c\u8be6\u7ec6\u53ef\u4ee5\u53c2\u8003\u8fd9\u91cc\uff08\u94fe\u63a5\u91cc\u7684\u5185\u5bb9\u548c\u4e0b\u9762\u7684\u516c\u5f0f\u6709\u4e9b\u7ec6\u5fae\u7684\u5dee\u522b\uff0c\u4f46\u662f\u601d\u60f3\u662f\u4e00\u6837\u7684\uff09</p> \\[ Loss=\\frac{1}{N}\\sum^N\\ _{i=1}-log(sigmoid(pos\\_score - neg\\_score)) \\]"},{"location":"zh/blog/match/#13-list-wisemode-2","title":"1.3 List wise\uff08mode = 2\uff09","text":"<p>\ud83d\ude07\u6838\u5fc3\u601d\u60f3\uff1a\u7528\u6237\u5bf9\u6b63\u6837\u672c\u611f\u5174\u8da3\u7684\u7a0b\u5ea6\u5e94\u8be5\u5927\u4e8e\u8d1f\u6837\u672c \u3002</p> <p>\u55ef\uff1f\u600e\u4e48\u548cPair wise\u4e00\u6837\uff1f</p> <p>\u6ca1\u9519\uff01List wise\u7684\u8bad\u7ec3\u65b9\u5f0f\u7684\u601d\u60f3\u548cPair wise\u662f\u4e00\u6837\u7684\uff0c\u53ea\u4e0d\u8fc7\u5b9e\u73b0\u4e0a\u4e0d\u540c\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u53ec\u56de\u6a21\u578b\uff0c\u8f93\u5165N+2\u5143\u7ec4\\(&lt;User, ItemPositive, ItemNeg\\_1, ... , ItemNeg\\_N&gt;\\)\uff0c\u8f93\u51fa\u7528\u6237\u5bf91\u4e2a\u6b63\u6837\u672c\u548cN\u4e2a\u8d1f\u6837\u672c\u7684\u5174\u8da3\u5f97\u5206\u3002</p> <p>\u8bad\u7ec3\u76ee\u6807\u4e3a\uff1a\u5bf9\u6b63\u6837\u672c\u7684\u5174\u8da3\u5f97\u5206\u5e94\u8be5\u5c3d\u53ef\u80fd\u5927\u4e8e\u5176\u4ed6\u6240\u6709\u8d1f\u6837\u672c\u7684\u5174\u8da3\u5f97\u5206\u3002</p> <p>\u6846\u67b6\u4e2d\u91c7\u7528\u7684Loss\u4e3a\\(torch.nn.CrossEntropyLoss\\)\uff0c\u5373\u5bf9\u8f93\u51fa\u8fdb\u884cSoftmax\u5904\u7406\u540e\u53d6\u3002</p> <p>PS\uff1a\u8fd9\u91cc\u7684List wise\u65b9\u5f0f\u5bb9\u6613\u548cRanking\u4e2d\u7684List wise\u6df7\u6dc6\uff0c\u867d\u7136\u4e8c\u8005\u540d\u5b57\u4e00\u6837\uff0c\u4f46ranking\u7684List wise\u8003\u8651\u4e86\u6837\u672c\u4e4b\u95f4\u7684\u987a\u5e8f\u5173\u7cfb\u3002\u4f8b\u5982ranking\u4e2d\u4f1a\u8003\u8651MAP\u3001NDCP\u7b49\u8003\u8651\u987a\u5e8f\u7684\u6307\u6807\u4f5c\u4e3a\u8bc4\u4ef7\u6307\u6807\uff0c\u800cMatching\u4e2d\u7684List wise\u6ca1\u6709\u8003\u8651\u987a\u5e8f\u3002</p>"},{"location":"zh/blog/match/#3","title":"\u4e8c\u3001\u4e24\u4e2a\u5411\u91cf\u6709\u591a\u8fdc\uff1f\u2014\u2014 3 \u79cd\u8861\u91cf\u6307\u6807","text":"<p>\ud83e\udd14\u7ed9\u5b9a\u4e00\u4e2a\u7528\u6237\u5411\u91cf\u548c\u4e00\u4e2a\u7269\u54c1\u5411\u91cf\uff0c\u5982\u4f55\u8861\u91cf\u4ed6\u4eec\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\uff1f</p> <p>\u5148\u5b9a\u4e49\u7528\u6237\u5411\u91cf\\(user \\in \\mathcal R^D\\)\uff0c\\(item\\in \\mathcal R^D\\)\uff0cD\u8868\u793a\u7528\u6237\u5411\u91cf\u548c\u7269\u54c1\u5411\u91cf\u7684\u7ef4\u5ea6\u3002</p>"},{"location":"zh/blog/match/#21-cosine","title":"2.1 cosine","text":"<p>\u521d\u4e2d\u5b66\u8fc7\uff1a</p> \\[ cos(a,b)=\\frac{&lt;a,b&gt;}{|a|*|b|} \\] <p>\u8868\u793a\u4e24\u4e2a\u5411\u91cf\u7684\u5939\u89d2\uff0c\u4f1a\u8f93\u51fa\u4e00\u4e2a[-1, 1]\u4e4b\u95f4\u7684\u5b9e\u6570\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4ee5\u6b64\u4f5c\u4e3a\u76f8\u4f3c\u5ea6\u7684\u8861\u91cf\u4f9d\u636e\uff1a\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u89d2\u5ea6\u8d8a\u5c0f\uff0c\u5c31\u8d8a\u76f8\u4f3c\u3002</p> <p>\u5728RecHub\u7684\u6240\u6709\u53cc\u5854\u6a21\u578b\u4e2d\uff0c\u8bad\u7ec3\u9636\u6bb5\u90fd\u662f\u8f93\u51fa\u7684cosine\u76f8\u4f3c\u5ea6\u3002</p>"},{"location":"zh/blog/match/#22-dot","title":"2.2 dot","text":"<p>\u5373\u5411\u91cf\u7684\u5185\u79ef\uff0c\u7528$ $\u8868\u793a\u5411\u91cfa\u3001b\u7684\u5185\u79ef\u3002 <p>\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u601d\u60f3\u662f\uff1a\u5982\u679c\u5c06a\u3001b \u5411\u91cfL2 normalize\uff0c\u5373 \\(\\tilde{a}=\\frac{a}{|a|}\\ ,\\tilde{b}=\\frac{b}{|b|}\\)\uff0c\u7136\u540e\u76f4\u63a5\u5c06 \\(\\tilde{a}\u3001\\tilde{b}\\)\u6c42\u5185\u79ef\uff0c\u5c31\u7b49\u4ef7\u4e8e\u4e8e \\(cos(a,b)\\)\u3002 \uff08\u5f88\u5bb9\u6613\uff0c\u8fd9\u91cc\u5c31\u4e0d\u63a8\u5bfc\u4e86\uff09</p> <p>\u5b9e\u9645\u4e0a\uff0cRecHub\u4e2d\u7684\u6240\u6709\u53cc\u5854\u6a21\u578b\u5c31\u662f\u8fd9\u4e48\u505a\u7684\uff0c\u5148\u8ba1\u7b97User Embedding\u548cItem Embedding\uff0c\u7136\u540e\u5206\u522b\u5c06\u5176\u8fdb\u884cL2 Norm\uff0c\u518d\u8ba1\u7b97\u5185\u79ef\uff0c\u5f97\u5230cosine\u76f8\u4f3c\u5ea6\u3002\u8fd9\u6837\u53ef\u4ee5\u63d0\u5347\u6a21\u578b \u9a8c\u8bc1\u63a8\u7406 \u7684\u901f\u5ea6\u3002</p>"},{"location":"zh/blog/match/#23-euclidian-distance","title":"2.3 Euclidian Distance\uff08\u6b27\u6c0f\u8ddd\u79bb\uff09","text":"<p>\u6b27\u6c0f\u8ddd\u79bb\u5373\u6211\u4eec\u751f\u6d3b\u4e2d\u201c\u8ddd\u79bb\u201d\u7684\u542b\u4e49\u3002</p> <p>\ud83d\ude4b\u7ecf\u8fc7L2 Norm\u540e\u7684\u5411\u91cfa,b\uff0c\u6700\u5927\u5316\u5176cosine\u76f8\u4f3c\u5ea6\u4e0e\u6700\u5c0f\u5316\u5176\u6b27\u6c0f\u8ddd\u79bb\uff0c\u662f\u7b49\u4ef7\u7684</p> <p>\u4e3a\u4ec0\u4e48\uff1f\u89c1\u4e0b\u9762\u516c\u5f0f\uff1a</p> \\[ \\begin{align*}   EuclidianDistance(a,b)^2 &amp;= \\sum_{i=1}^N(a_i-b_i)^2 \\\\     &amp;= \\sum_{i=1}^Na_i^2+\\sum_{i=1}^Nb_i^2-\\sum_{i=1}^N2*a_i*b_i\\\\     &amp;= 2-2*\\sum_{i=1}^Na_i*b_i \\\\     &amp;= 2*(1-cos(a,b)) \\end{align*} \\] <p>\u4e24\u70b9\u89e3\u91ca\u4e00\u4e0b\uff1a</p> <ol> <li>\u7b2c\u4e8c\u884c\u5230\u7b2c\u4e09\u884c\uff0c\\(\\sum\\ _{i=1}^N a\\_i^2=1\\)\u3002\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3aa\u662fL2 Norm\u540e\u7684\u5411\u91cf\u3002b\u540c\u7406\u3002</li> <li>\u7b2c\u4e09\u884c\u5230\u7b2c\u56db\u884c\uff0c\\(\\sum_{i=1}^Na_i*b_i\\)\uff0c\u5373\u5411\u91cfa\u3001b\u7684\u5185\u79ef\uff0c\u56e0\u4e3aa\u3001b\u5df2\u7ecfL2 Norm\uff0c\u6240\u4ee5\u76f8\u5f53\u4e8ecos\u3002</li> </ol> <p>\u5728RecHub\u4e2d\uff0c\u9a8c\u8bc1\u9636\u6bb5\u91c7\u7528\u7684\u5c31\u662fannoy\u7684\u6b27\u6c0f\u8ddd\u79bb\u3002</p> <p>\ud83d\ude4b\u5c0f\u7ed3\uff1aL2 Norm\u540e\u7684\u4e24\u4e2a\u5411\u91cf\uff0cmax dot\u7b49\u4ef7\u4e8emax cosine\u7b49\u4ef7\u4e8emin EuclidianDistance</p>"},{"location":"zh/blog/match/#_1","title":"\u4e09\u3001 \u6e29\u5ea6\u7cfb\u6570\u6709\u591a\u70ed\uff1f","text":"<p>\u5728\u6b64\u4e4b\u524d\uff0c\u8bf7\u5148\u786e\u8ba4\u660e\u767dtorch.nn.CrossEntropyLoss\u4e2d\u90fd\u8fdb\u884c\u4e86\u4ec0\u4e48\u8fd0\u7b97\uff08LogSoftmax + NLLLoss\uff09\uff0c\u8fd9\u5bf9\u9605\u8bfb\u6e90\u7801\u4e5f\u662f\u5173\u952e\u7684\u4fe1\u606f\u3002\u8fd9\u91cc\u662f\u5b98\u65b9\u6587\u6863\u3002</p> <p>\u5047\u8bbe\u4e00\u4e2a\u573a\u666f\uff1a\u91c7\u7528List wise\u7684\u8bad\u7ec3\u65b9\u5f0f\uff0c1\u4e2a\u6b63\u6837\u672c\uff0c3\u4e2a\u8d1f\u6837\u672c\uff0ccosine\u76f8\u4f3c\u5ea6\u4f5c\u4e3a\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7684\u8861\u91cf\u6307\u6807\u3002</p> <p>\u5047\u8bbe\u6b64\u65f6\u6211\u7684\u6a21\u578b\u5b8c\u7f8e\u7684\u9884\u6d4b\u4e86\u4e00\u6761\u8bad\u7ec3\u6570\u636e\uff0c\u5373\u8f93\u51fa\u7684logits\u4e3a\uff081, -1, -1, -1\uff09\uff0c\u6309\u7406\u8bf4\u6211\u7684Loss\u5e94\u8be5\u4e3a0\uff0c\u81f3\u5c11\u5e94\u8be5\u5f88\u5c0f\u3002\u4f46\u6b64\u65f6\u5982\u679c\u91c7\u7528CrossEntropyLoss\uff0c\u5f97\u5230\u7684Loss\u662f\uff1a</p> \\[ -log(exp(1)/(exp(1)+exp(-1)*3))=0.341 \\] <p>\u4f46\u6b64\u65f6\u5982\u679c\u5bf9logits\u9664\u4e0a\u4e00\u4e2a\u6e29\u5ea6\u7cfb\u6570$temperature=0.2 $\uff0c\u5373logits\u4e3a\uff085, -5, -5, -5\uff09\uff0c\u7ecf\u8fc7CrossEntropyLoss\uff0c\u5f97\u5230\u7684Loss\u662f\uff1a</p> \\[ -log(exp(5)/(exp(5)+exp(-5)*3))=0.016 \\] <p>\u8fd9\u6837\u5c31\u4f1a\u5f97\u5230\u4e00\u4e2a\u5f88\u5c0f\u5230\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u7684Loss\u4e86\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9logits\u9664\u4e0a\u4e00\u4e2atemperature\u7684\u4f5c\u7528\u662f\u6269\u5927logits\u4e2d\u6bcf\u4e2a\u5143\u7d20\u4e2d\u7684\u4e0a\u4e0b\u9650\uff0c\u62c9\u56desoftmax\u8fd0\u7b97\u7684\u654f\u611f\u8303\u56f4 \u3002</p> <p>\u4e1a\u754c\u4e00\u822cL2 Norm\u4e0etemperature\u642d\u914d\u4f7f\u7528\u3002</p>"},{"location":"zh/tutorials/matching/","title":"\u53ec\u56de\u6a21\u578b\u6559\u7a0b","text":"<p>\u8fd9\u91cc\u53ef\u4ee5\u4ecb\u7ecd\u5339\u914d\u6a21\u578b\u7684\u4f7f\u7528\u65b9\u6cd5\u548c\u793a\u4f8b\u4ee3\u7801\uff0c\u5982 DSSM \u7b49\u3002</p>"},{"location":"zh/tutorials/multi-task/","title":"\u591a\u4efb\u52a1\u5b66\u4e60\u6559\u7a0b","text":"<p>\u8fd9\u91cc\u53ef\u4ee5\u4ecb\u7ecd\u591a\u4efb\u52a1\u5b66\u4e60\u6a21\u578b\u7684\u4f7f\u7528\u65b9\u6cd5\u548c\u793a\u4f8b\u4ee3\u7801\uff0c\u5982 SharedBottom\u3001ESMM \u7b49\u3002</p>"},{"location":"zh/tutorials/ranking/","title":"\u6392\u5e8f\u6a21\u578b\u6559\u7a0b","text":"<p>\u8fd9\u91cc\u53ef\u4ee5\u4ecb\u7ecd\u6392\u5e8f\u6a21\u578b\u7684\u4f7f\u7528\u65b9\u6cd5\u548c\u793a\u4f8b\u4ee3\u7801\uff0c\u5982 DIN \u7b49\u3002</p>"},{"location":"zh/%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/","title":"\u53c2\u8003\u8d44\u6599","text":"<p>SIGIR 2020, SIGKDD 2020, RecSys 2020, CIKM 2020, AAAI 2021, WSDM 2021, WWW 2021, SIGIR 2021</p> SIGIR SIGKDD RecSys CIKM WSDM WWW ICDM AAAI IJCAI ICML/NIPS 2020 \u709c\u826f \u5b99\u946b \u5b99\u946b \u5b87\u5bb8 \u5947\u8fbe \u5947\u8fbe \u5b87\u5bb8 \u5947\u8fbe \u709c\u826f \u5b99\u946b 2021 2022 <p> SIGIR 2022 | \u63a8\u8350\u7cfb\u7edf\u76f8\u5173\u8bba\u6587\u5206\u7c7b\u6574\u7406 \u4f5c\u8005\uff1a @\u6797\u5b50\u6db5 \uff0c\u4e2d\u56fd\u4eba\u6c11\u5927\u5b66\u4fe1\u606f\u5b66\u9662\u7855\u58eb\u4e8c\u5e74\u7ea7\u5728\u8bfb\uff0c\u5bfc\u5e08\u4e3a\u8d75\u946b\u6559\u6388\uff0c\u7814\u7a76\u65b9\u5411\u4e3a\u63a8\u8350\u7cfb\u7edf \u5bfc\u8bfbACM SIGIR 2022\u662fCCF A\u7c7b\u4f1a\u8bae\uff0c\u4eba\u5de5\u667a\u80fd\u9886\u57df\u667a\u80fd\u4fe1\u606f\u68c0\u7d22\uff08 Information Retrieval\uff0cIR\uff09\u65b9\u5411\u6700\u6743\u5a01\u7684\u56fd\u9645\u4f1a\u8bae\u3002\u2026 https://zhuanlan.zhihu.com/p/500163155</p> <p> dblp: computer science bibliography The dblp computer science bibliography is the online reference for open bibliographic information on major computer science journals and proceedings. https://dblp.org/</p> <p> IJCAI2022\u6709\u54ea\u4e9b\u503c\u5f97\u5173\u6ce8\u7684\u8bba\u6587\uff1f - \u77e5\u4e4e IJCAI 2022\u5df2\u516c\u5e03\u5f55\u7528\u8bba\u6587:https://ijcai-22.org/main-track-accepted-papers/\u5bf9\u63a8\u8350\u7cfb\u7edf\u76f8\u5173\u8bba\u6587\u8fdb\u884c\u68b3\u2026 https://www.zhihu.com/question/528776724/answer/2515698081?utm_source=wechat_session\\&amp;utm_medium=social\\&amp;utm_oi=62371468935168\\&amp;utm_content=group3_Answer\\&amp;utm_campaign=shareopn</p> <p> Main Track Accepted papers  https://ijcai-21.org/program-main-track/</p>"},{"location":"","title":"Welcome to use Torch-RecHub","text":"Torch-RecHub <p>An easy-to-use, scalable, and high-performance recommendation system framework based on PyTorch</p>            Quick Start                     View GitHub"},{"location":"contributing/","title":"Contribution Guide","text":"<p>Thank you very much for your interest in the Torch-RecHub project and for considering contributing! Your help is crucial for the development of the project. This guide will detail how to participate in contributions.</p>"},{"location":"contributing/#how-to-contribute","title":"How to Contribute","text":"<p>You can contribute in the following ways:</p> <ol> <li>Report Bugs: If you find any errors or unexpected behavior while using Torch-RecHub, please submit an Issue detailing the problem, steps to reproduce it, and your environment information.</li> <li>Suggest Enhancements: If you have ideas for improving existing features or adding new ones, please create an Issue first to discuss.</li> <li>Submit Code Changes: Fix bugs, implement new features, or improve code quality.</li> <li>Improve Documentation: Enhance or correct documentation, write tutorials, or provide example use cases.</li> </ol>"},{"location":"contributing/#finding-contribution-points","title":"Finding Contribution Points","text":"<p>You can start from the following aspects:</p> <ol> <li>Check Issues: Browse the project Issues list, look for issues marked with <code>help wanted</code>.</li> <li>Improve Existing Features: If you find areas for optimization during use, feel free to propose suggestions or submit improvements directly.</li> <li>Implement New Features: If you have new ideas, it is recommended to create an Issue for discussion first to ensure it aligns with the project direction.</li> </ol>"},{"location":"contributing/#contribution-process-code-and-documentation","title":"Contribution Process (Code and Documentation)","text":"<p>We use the standard GitHub Fork &amp; Pull Request workflow to accept code and documentation contributions. (You can also perform the following operations on the GitHub website).</p> <ol> <li> <p>Fork the Repository     Visit the Torch-RecHub GitHub repository page, click the \"Fork\" button in the top right corner to copy the project to your own GitHub account.</p> </li> <li> <p>Clone Your Fork     Clone your forked repository locally:     <pre><code>git clone https://github.com/YOUR_USERNAME/torch-rechub.git\ncd torch-rechub\n</code></pre>     Please replace <code>YOUR_USERNAME</code> with your GitHub username.</p> </li> <li> <p>Set Upstream Remote (Optional but Recommended)     Add the original project repository as an upstream remote for easy synchronization of updates:     <pre><code>git remote add upstream https://github.com/datawhalechina/torch-rechub.git\n# Sync updates from upstream main branch if needed\n# git fetch upstream\n# git checkout main\n# git merge upstream/main\n</code></pre></p> </li> <li> <p>Make Changes     Write code, modify documentation, or make other improvements directly on the <code>main</code> branch.</p> </li> <li> <p>Ensure Code Quality</p> <ul> <li>Code Style: Please adhere to the project's existing code style.</li> <li>Documentation: For user-visible changes (like new features, API changes), please update relevant documentation (README, files under <code>docs/</code>, etc.).</li> </ul> </li> <li> <p>Commit Changes     Commit your changes with clear and meaningful commit messages. We recommend following the Conventional Commits specification.     <pre><code>git add .\ngit commit -m \"feat: Add support for XXX model\"\n# Or\ngit commit -m \"fix: Correct typo in README\"\n# Or\ngit commit -m \"docs: Update contribution guide\"\n</code></pre></p> </li> <li> <p>Push Branch     Push your local <code>main</code> branch to your forked GitHub repository:     <pre><code>git push origin main\n</code></pre></p> </li> <li> <p>Create a Pull Request (PR)     Return to your forked repository page on GitHub. You should see a prompt suggesting you create a Pull Request based on the recent pushes to <code>main</code>. Click that prompt or manually navigate to the \"Pull requests\" tab and click \"New pull request\".</p> <ul> <li>Choose Branches: Ensure the Base repository is <code>datawhalechina/torch-rechub</code>'s <code>main</code> branch, and the Head repository is your fork's <code>main</code> branch.</li> <li>Fill in PR Information:<ul> <li>Title: Concisely describe the purpose of the PR, often based on the commit message.</li> <li>Description: Detail the changes you've made, the problem solved (you can link related Issues, e.g., <code>Closes #123</code>), and any points reviewers should note. If the PR includes UI changes, please attach screenshots or screen recordings.</li> </ul> </li> <li>Allow Maintainer Edits (Optional): Checking \"Allow edits by maintainers\" often helps maintainers quickly fix minor issues.</li> <li>Submit PR: Click \"Create pull request\".</li> </ul> </li> </ol>"},{"location":"contributing/#pull-request-review","title":"Pull Request Review","text":"<ul> <li>After submitting the PR, the project's CI/CD workflow will automatically run tests and checks.</li> <li>Project maintainers will review your code and documentation and may suggest modifications.</li> <li>Please respond promptly to review comments and make necessary changes. Maintainers might make minor edits directly on your branch (if you allow it), or you might need to update the code yourself and push again.</li> <li>Once the PR is approved and passes all checks, maintainers will merge it into the main branch.</li> </ul> <p>Thank you again for your contribution to Torch-RecHub!</p>"},{"location":"examples/","title":"Examples","text":"<p>Complete example code demonstrating usage of Torch-RecHub.</p>"},{"location":"faq/","title":"Frequently Asked Questions","text":"<p>Common questions and troubleshooting guide for Torch-RecHub.</p>"},{"location":"getting-started/","title":"Getting Started Tutorial","text":"<p>First, install Torch-RecHub:</p> <pre><code>pip install torch-rechub\n</code></pre> <p>Then use the following code to train recommender system models:</p>"},{"location":"getting-started/#ranking-ctr-prediction","title":"Ranking (CTR Prediction)","text":"<pre><code>from torch_rechub.models.ranking import DeepFM\nfrom torch_rechub.trainers import CTRTrainer\nfrom torch_rechub.utils.data import DataGenerator\n\ndg = DataGenerator(x, y)\ntrain_dl, val_dl, test_dl = dg.generate_dataloader(split_ratio=[0.7, 0.1], batch_size=256)\n\nmodel = DeepFM(deep_features=deep_features, fm_features=fm_features, \n               mlp_params={\"dims\": [256, 128], \"dropout\": 0.2, \"activation\": \"relu\"})\n\nctr_trainer = CTRTrainer(model)\nctr_trainer.fit(train_dl, val_dl)\nauc = ctr_trainer.evaluate(test_dl)\n</code></pre>"},{"location":"getting-started/#multi-task-learning","title":"Multi-Task Learning","text":"<pre><code>from torch_rechub.models.multi_task import SharedBottom, ESMM, MMOE, PLE, AITM\nfrom torch_rechub.trainers import MTLTrainer\n\ntask_types = [\"classification\", \"classification\"]\nmodel = MMOE(features, task_types, 8, \n            expert_params={\"dims\": [32,16]}, \n            tower_params_list=[{\"dims\": [32, 16]}, {\"dims\": [32, 16]}])\n\nmtl_trainer = MTLTrainer(model)\nmtl_trainer.fit(train_dl, val_dl)\n</code></pre>"},{"location":"getting-started/#matching-models","title":"Matching Models","text":"<pre><code>from torch_rechub.models.matching import DSSM\nfrom torch_rechub.trainers import MatchTrainer\nfrom torch_rechub.utils.data import MatchDataGenerator\n\ndg = MatchDataGenerator(x, y)\ntrain_dl, test_dl, item_dl = dg.generate_dataloader(test_user, all_item, batch_size=256)\n\nmodel = DSSM(user_features, item_features, temperature=0.02,\n             user_params={\"dims\": [256, 128, 64], \"activation\": 'prelu'},\n             item_params={\"dims\": [256, 128, 64], \"activation\": 'prelu'})\n\nmatch_trainer = MatchTrainer(model)\nmatch_trainer.fit(train_dl)\n</code></pre>"},{"location":"getting-started/#model-zoo","title":"Model Zoo","text":""},{"location":"getting-started/#model-list","title":"Model List","text":"Title Tag Development Status Developers Institution Meeting Year URL PDF DIN Rank,Sequence Completed \u8d56\u654f\u6750 Alibaba KDD 2018 https://arxiv.org/abs/1706.06978 1706.06978.pdf ESMM Rank Completed \u8d56\u654f\u6750 Alibaba SIGIR 2018 https://arxiv.org/abs/1804.07931 1804.07931.pdf Youtube-SBC Match Completed \u8d56\u654f\u6750 Google RecSys 2019 https://research.google/pubs/pub48840/ 6c8a86c981a62b0126a11896b7f6ae0dae4c3566.pdf DSSM Match Completed \u8d56\u654f\u6750 \u5fae\u8f6f CIKM 2013 https://posenhuang.github.io/papers/cikm2013_DSSM_fullversion.pdf cikm2013_DSSM_fullversion.pdf MetaBalance \u5176\u4ed6 Completed Facebook www 2022 https://arxiv.org/pdf/2203.06801v1.pdf 2203.06801v1-3.pdf Wide &amp; Deep Rank Completed \u8d56\u654f\u6750 Google DLRS 2016 https://arxiv.org/pdf/1606.07792.pdf 1606.07792.pdf DSSM-Facebook Match Completed \u8d56\u654f\u6750 Facebook KDD 2020 https://arxiv.org/abs/2006.11632 2006.11632.pdf DeepFM Rank Completed \u8d56\u654f\u6750 Huawei IJCAI 2017 https://arxiv.org/abs/1703.04247 1703.04247.pdf SasRec Match \u8fdb\u884c\u4e2d \u738b\u5b87\u5bb8 PLE Rank Completed \u8d56\u654f\u6750 Tencent RecSys 2020 https://dl.acm.org/doi/abs/10.1145/3383313.3412236?casa_token=4g_ErWbxWf8AAAAA%3APhbcdBa6b-SXHlpFtKh1Lybjtv48sYV2l1GsPeL43N5Lpih_GwarAwV5hzxOYUVZoWd8dimltm4czmI 2020 (Tencent) (Recsys) [PLE] Progressive Layered Extraction (PLE) - A Novel Multi-Task Learning (MTL) Model for Personalized Recommendations.pdf AITM Rank Completed \u8d56\u654f\u6750 Meituan KDD 2021 https://arxiv.org/abs/2105.08489 2105.08489-2.pdf Shared-Bottom Rank Completed \u8d56\u654f\u6750 CMU ML 1997 https://link.springer.com/content/pdf/10.1023/A:1007379606734.pdf Caruana1997_Article_MultitaskLearning.pdf DCN Rank Completed \u8d56\u654f\u6750 Google,\u65af\u5766\u798f AKDD 2017 https://arxiv.org/abs/1708.05123 1708.05123.pdf Youtube-DNN Match Completed \u8d56\u654f\u6750 Google RecSys 2016 https://dl.acm.org/doi/10.1145/2959100.2959190 2959100.2959190.pdf MMOE Rank Completed \u8d56\u654f\u6750 Google KDD 2018 https://dl.acm.org/doi/pdf/10.1145/3219819.3220007 3219819.3220007.pdf GRU4Rec Match,Sequence Completed \u738b\u51ef Tencent KDD 2022 SASRec Match,Sequence Completed \u738b\u5b87\u5bb8 UC ICDM 2018 https://arxiv.org/pdf/1808.09781.pdf 1808.09781-3.pdf SINE Match Completed \u5eb7\u535a Alibaba WSDM 2021 https://arxiv.org/pdf/2102.09267.pdf 2102.09267.pdf (FAT-)DeepFFM Rank Completed \u5eb7\u535a Sina arXiv 2019 https://arxiv.org/pdf/1905.06336.pdf 1905.06336.pdf STAMP Match,Sequence Completed \u5eb7\u535a \u7535\u5b50\u79d1\u5927 KDD 2018 https://dl.acm.org/doi/10.1145/3219819.3219950 3219819.3219950.pdf NARM Match,Sequence Completed \u5eb7\u535a \u4eac\u4e1c,\u5c71\u4e1c\u5927\u5b66 CIKM 2017 https://arxiv.org/pdf/1711.04725.pdf 1711.00165.pdf DCN_v2 Rank Completed \u53f6\u5fd7\u96c4 Google www 2021 https://arxiv.org/abs/2008.13535 DCN V2 Improved Deep &amp; Cross Network and Practical Lessons.pdf EDCN Rank Completed \u53f6\u5fd7\u96c4 Huawei KDD 2021 https://dlp-kdd.github.io/assets/pdf/DLP-KDD_2021_paper_12.pdf FiBiNet Rank Completed \u53f6\u5fd7\u96c4 Sina RecSys 2019 https://dl.acm.org/doi/abs/10.1145/3298689.3347043 DIEN Rank,Sequence Completed \u8303\u6d9b Alibaba AAAI 2019 https://ojs.aaai.org/index.php/AAAI/article/view/4545 4545-Article Text-7584-1-10-20190706.pdf BST Rank,Sequence Completed \u8303\u6d9b Alibaba arXiv 2019 Behavior Sequence Transformer for E-commerce Recommendation in Alibaba PDF"},{"location":"installation/","title":"Installation Guide","text":"<p>This document provides detailed installation instructions for Torch-RecHub, including both stable and development versions.</p>"},{"location":"installation/#stable-release","title":"Stable Release","text":"<pre><code>pip install torch-rechub\n</code></pre>"},{"location":"installation/#latest-version-recommended","title":"Latest Version (Recommended)","text":"<pre><code>git clone https://github.com/datawhalechina/torch-rechub.git\ncd torch-rechub\npython setup.py install\n</code></pre>"},{"location":"introduction/","title":"Project Introduction","text":""},{"location":"introduction/#project-overview","title":"Project Overview","text":"<p>Torch-RecHub is a flexible and easily extensible recommendation system framework built using PyTorch. It aims to simplify the research and application of recommendation algorithms, providing common model implementations, data processing tools, and evaluation metrics.</p>"},{"location":"introduction/#features","title":"Features","text":"<ul> <li>Modular Design: Easy to add new models, datasets, and evaluation metrics.</li> <li>Based on PyTorch: Leverage PyTorch's dynamic graph and GPU acceleration capabilities.</li> <li>Rich Model Library: Includes various classic and cutting - edge recommendation algorithms (listed below).</li> <li>Standardized Process: Provide unified data loading, training, and evaluation processes.</li> <li>Easy to Configure: Easily adjust experimental settings through configuration files or command - line parameters.</li> <li>Reproducibility: Aims to ensure the reproducibility of experimental results.</li> <li>Easy to Extend: Decouple model training from model definition, without the concept of a base model.</li> <li>Native Functions: Use PyTorch's native classes and functions as much as possible without excessive customization.</li> <li>Concise Model Code: Facilitate beginners' learning while adhering to the ideas of academic papers.</li> <li>Other Features: For example, support negative sampling, multi - task learning, etc.</li> </ul>"},{"location":"introduction/#overall-architecture","title":"Overall Architecture","text":""},{"location":"introduction/#data-layer-design","title":"Data Layer Design","text":""},{"location":"introduction/#feature-classes","title":"Feature Classes","text":"<p>Numerical Features * Such as age, salary, daily click - through rate, etc.</p> <p>Categorical Features * Such as city, education level, gender, etc. * Encode with LabelEncoder to obtain Embedding vectors.</p> <p>Sequence Features * Ordered interest sequences: such as the item list clicked in the last week. * Unordered tag features: such as movie genres (action | suspense | crime). * Encode with LabelEncoder to obtain sequence Embedding vectors. * Perform pooling to reduce dimensions. * Preserve the sequence for model operations such as attention with other features. * Share the Embedding Table with Sparse features.</p>"},{"location":"introduction/#data-classes","title":"Data Classes","text":"<ul> <li>Dataset</li> <li>Dataloader</li> </ul>"},{"location":"introduction/#tool-classes","title":"Tool Classes","text":"<ul> <li>Sequence feature generation</li> <li>Sample construction</li> <li>Negative sampling</li> <li>Vectorized retrieval</li> </ul>"},{"location":"introduction/#model-layer-design","title":"Model Layer Design","text":""},{"location":"introduction/#model-classes","title":"Model Classes","text":"<p>General Layers Shallow Feature Modeling * LR: Logistic Regression * MLP: Multi - Layer Perceptron, parameters such as dims can be set through a dictionary. * EmbeddingLayer: A general Embedding layer that handles three types of features, maintains an EmbeddingTable in dictionary format, and outputs the input embeddings required by the model.</p> <p>Deep Feature Modeling * FM, FFM, CIN * self - attention, target - attention, transformer</p> <p>Custom Layers</p>"},{"location":"api-reference/models/","title":"Models API Reference","text":"<p>Detailed documentation of model APIs and parameters in Torch-RecHub.</p>"},{"location":"api-reference/trainers/","title":"\u8bad\u7ec3\u5668 API \u53c2\u8003","text":"<p>\u8fd9\u91cc\u53ef\u4ee5\u8be6\u7ec6\u4ecb\u7ecd Torch-RecHub \u4e2d\u5404\u4e2a\u8bad\u7ec3\u5668\u7684 API \u63a5\u53e3\u548c\u53c2\u6570\u8bf4\u660e\u3002</p>"},{"location":"api-reference/utils/","title":"Utilities API Reference","text":"<p>Detailed documentation of utility classes and functions in Torch-RecHub.</p>"},{"location":"tutorials/matching/","title":"Matching Models Tutorial","text":"<p>Tutorial and example code for matching models like DSSM.</p>"},{"location":"tutorials/multi-task/","title":"Multi-Task Learning Tutorial","text":"<p>Tutorial and example code for multi-task learning models like MMOE.</p>"},{"location":"tutorials/ranking/","title":"Ranking Models Tutorial","text":"<p>Tutorial and example code for ranking models like DIN.</p>"}]}